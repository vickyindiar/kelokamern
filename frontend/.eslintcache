[{"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\index.js":"1","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\App.js":"2","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\store.js":"4","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\authAction.js":"5","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rauth.js":"6","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\nav\\PrivateRoute.js":"7","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\AdminLayout.js":"8","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\authReducer.js":"9","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\_lib\\_spinner\\Spinner.js":"10","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\dataReducer.js":"11","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\tableReducer.js":"12","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\config.js":"13","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\setAuthToken.js":"14","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\Nav.js":"15","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rpage.js":"16","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\authType.js":"17","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\isEmpty.js":"18","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\dataType.js":"19","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\Auth.js":"20","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\tableType.js":"21","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\StyledC.js":"22","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\home\\Home.js":"23","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\Data.js":"24","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\report\\Report.js":"25","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\Sales.js":"26","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\purchase\\Purchase.js":"27","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\return\\Return.js":"28","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\setting\\Setting.js":"29","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridSupplier.js":"30","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ToolsAction.js":"31","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridProduct.js":"32","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCustomer.js":"33","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridBrand.js":"34","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCategory.js":"35","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridQty.js":"36","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\dataAction.js":"37","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\template\\Header.js":"38","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ConfigGrids.js":"39","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\tableAction.js":"40","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftSecSales.js":"41","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightSecSales.js":"42","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\ScanSales.js":"43","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\ItemSales.js":"44","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\NoteSales.js":"45"},{"size":716,"mtime":1618889967346,"results":"46","hashOfConfig":"47"},{"size":2210,"mtime":1613377998036,"results":"48","hashOfConfig":"47"},{"size":5086,"mtime":1565835978478,"results":"49","hashOfConfig":"47"},{"size":492,"mtime":1615006125210,"results":"50","hashOfConfig":"47"},{"size":5652,"mtime":1613358366402,"results":"51","hashOfConfig":"47"},{"size":242,"mtime":1592893609449,"results":"52","hashOfConfig":"47"},{"size":552,"mtime":1612949802294,"results":"53","hashOfConfig":"47"},{"size":1229,"mtime":1592901035263,"results":"54","hashOfConfig":"47"},{"size":1287,"mtime":1592902393690,"results":"55","hashOfConfig":"47"},{"size":808,"mtime":1565835978464,"results":"56","hashOfConfig":"47"},{"size":1635,"mtime":1615969280257,"results":"57","hashOfConfig":"47"},{"size":4521,"mtime":1596441818641,"results":"58","hashOfConfig":"47"},{"size":3394,"mtime":1612752765310,"results":"59","hashOfConfig":"47"},{"size":259,"mtime":1565835978481,"results":"60","hashOfConfig":"47"},{"size":17182,"mtime":1613359969478,"results":"61","hashOfConfig":"47"},{"size":1319,"mtime":1612948997890,"results":"62","hashOfConfig":"47"},{"size":216,"mtime":1592902335112,"results":"63","hashOfConfig":"47"},{"size":278,"mtime":1565835978480,"results":"64","hashOfConfig":"47"},{"size":391,"mtime":1615969504650,"results":"65","hashOfConfig":"47"},{"size":3796,"mtime":1613359717941,"results":"66","hashOfConfig":"47"},{"size":430,"mtime":1573098875953,"results":"67","hashOfConfig":"47"},{"size":3967,"mtime":1592538210841,"results":"68","hashOfConfig":"47"},{"size":456,"mtime":1596076878422,"results":"69","hashOfConfig":"47"},{"size":3083,"mtime":1615878584687,"results":"70","hashOfConfig":"47"},{"size":291,"mtime":1565835978472,"results":"71","hashOfConfig":"47"},{"size":828,"mtime":1618896407400,"results":"72","hashOfConfig":"47"},{"size":298,"mtime":1565835978471,"results":"73","hashOfConfig":"47"},{"size":290,"mtime":1565835978473,"results":"74","hashOfConfig":"47"},{"size":294,"mtime":1565835978475,"results":"75","hashOfConfig":"47"},{"size":5282,"mtime":1617935741463,"results":"76","hashOfConfig":"47"},{"size":692,"mtime":1596430890553,"results":"77","hashOfConfig":"47"},{"size":7804,"mtime":1617931862493,"results":"78","hashOfConfig":"47"},{"size":5659,"mtime":1617932679389,"results":"79","hashOfConfig":"47"},{"size":3475,"mtime":1617931876479,"results":"80","hashOfConfig":"47"},{"size":3409,"mtime":1617932445648,"results":"81","hashOfConfig":"47"},{"size":3574,"mtime":1617936756230,"results":"82","hashOfConfig":"47"},{"size":11368,"mtime":1617931723711,"results":"83","hashOfConfig":"47"},{"size":304,"mtime":1565835978476,"results":"84","hashOfConfig":"47"},{"size":4203,"mtime":1617931648122,"results":"85","hashOfConfig":"47"},{"size":1199,"mtime":1573098875951,"results":"86","hashOfConfig":"47"},{"size":557,"mtime":1618893426096,"results":"87","hashOfConfig":"47"},{"size":422,"mtime":1618892536663,"results":"88","hashOfConfig":"47"},{"size":1300,"mtime":1618897392813,"results":"89","hashOfConfig":"47"},{"size":2991,"mtime":1618910363058,"results":"90","hashOfConfig":"47"},{"size":309,"mtime":1618892309706,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j4fbwa",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\index.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\App.js",[],["197","198"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\store.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\authAction.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rauth.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\nav\\PrivateRoute.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\AdminLayout.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\authReducer.js",["199"],"import { SET_AUTH, ERR_AUTH, TOOGLE_LOADING, STOP_SPNNER, SET_FIRST_LOAD } from '../types/authType';\r\nimport isEmpty from '../helper/isEmpty';\r\n\r\nconst initialState = {\r\n    isAuthenticated : false,\r\n    errAuthMessage:'',\r\n    loading: false,\r\n    firstLoad: true,\r\n    spinner: true,\r\n    user: ''\r\n};\r\nexport default function(state = initialState, action){\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthenticated : !isEmpty(action.payload.user),\r\n                user: { ...action.payload.user },\r\n                spinner: false,\r\n            }\r\n        case ERR_AUTH:\r\n            return {\r\n                ...state, \r\n                isAuthenticated: false,\r\n                errAuthMessage: action.payload,\r\n                spinner: false\r\n            }\r\n        case SET_FIRST_LOAD:\r\n            return{\r\n                ...state,\r\n                firstLoad: action.payload\r\n            }\r\n        case TOOGLE_LOADING: \r\n            return{\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case STOP_SPNNER:\r\n            return {\r\n                ...state,\r\n                spinner: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\_lib\\_spinner\\Spinner.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\dataReducer.js",["200"],"import {  \r\n          CHANGE_TAB,\r\n          GET_PRODUCT,\r\n          GET_SUPPLIER,\r\n          GET_CUSTOMER,\r\n          GET_BRAND,\r\n          GET_CATEGORY,\r\n          GET_QTYTYPE,\r\n          GET_COLOR\r\n          } from \"../types/dataType\";\r\n\r\nconst initialState = {\r\n    tabActive: -1,\r\n    dataProduct : [],\r\n    dataSupplier: [],\r\n    dataCustomer: [],\r\n    dataBrand: [],\r\n    dataCategory: [],\r\n    dataQtytype: [],\r\n    dataColor: []\r\n };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case CHANGE_TAB:\r\n        return {\r\n          ...state,\r\n          tabActive: action.payload.tabActive,\r\n        }\r\n      case GET_PRODUCT:\r\n        return{\r\n          ...state,\r\n          dataProduct: [...action.payload.dataSource ]\r\n        }\r\n      case GET_SUPPLIER:\r\n        return {\r\n          ...state,\r\n          dataSupplier: [...action.payload.dataSource ],\r\n        }\r\n      case GET_CUSTOMER:\r\n        return {\r\n          ...state,\r\n          dataCustomer: [...action.payload.dataSource ],\r\n        }\r\n      case GET_BRAND:\r\n        return {\r\n          ...state,\r\n          dataBrand: [...action.payload.dataSource ],\r\n        }\r\n      case GET_CATEGORY: \r\n        return {\r\n          ...state,\r\n          dataCategory: [...action.payload.dataSource ],\r\n        }\r\n      case GET_QTYTYPE:\r\n          return {\r\n            ...state,\r\n            dataQtytype: [...action.payload.dataSource ],\r\n          }\r\n      case GET_COLOR:\r\n        return {\r\n          ...state,\r\n          dataColor: [...action.payload.dataSource ],\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\tableReducer.js",["201"],"import { \r\n          TOOGLE_LOADING, LOAD_DATA, SELECT_ALL, \r\n          CHANGE_SORT, CHANGE_PAGE, CHANGE_ROW_PAGE, \r\n          CHANGE_FILTER, ROW_CLICK, RESELECT, UPDATE_FORM } from '../types/tableType';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    originDataSource: [],\r\n    dataSource: [],\r\n    columns: [],\r\n    order: \"asc\",\r\n    orderBy: \"\",\r\n    selected: [],\r\n    selectedAll: false,\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n    valueSearch:'',\r\n    selectTable: false,\r\n    showFilter: true,\r\n    isLoading: false,\r\n    cDataStore: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case LOAD_DATA:\r\n        return {\r\n          ...state, \r\n          columns: {...action.payload.columns },\r\n          originDataSource: {...action.payload.data },\r\n          dataSource: {...action.payload.data },\r\n          selected: []\r\n        }\r\n      case SELECT_ALL:\r\n          if (action.checked) {\r\n              return {\r\n                ...state,\r\n                selected: Object.values(state.dataSource).map(n => n.id),\r\n                selectedAll: !state.selectedAll\r\n              }\r\n          }\r\n          else{\r\n            return {\r\n              ...state,\r\n              selected: [],\r\n              selectedAll: false\r\n            }\r\n        }\r\n      case CHANGE_SORT: \r\n        const orderBy = action.payload;\r\n        let order = \"desc\";\r\n        if (state.orderBy === orderBy && state.order === order) {\r\n          order = \"asc\";\r\n        }\r\n        return{\r\n          ...state,\r\n          order,\r\n          orderBy\r\n        }\r\n      case CHANGE_PAGE: \r\n        return{\r\n          ...state,\r\n          page : action.payload\r\n        }\r\n      case CHANGE_ROW_PAGE:\r\n          return {\r\n            ...state,\r\n            rowsPerPage: action.payload\r\n        }\r\n      case CHANGE_FILTER:\r\n          let filtered = [];\r\n          let cols = [];\r\n\r\n          for(var prop in state.columns){ \r\n            cols.push(state.columns[prop].field);\r\n          }\r\n          if ( Object.values(state.originDataSource).length > 0) {\r\n            filtered = Object.values(state.originDataSource).filter(e => {\r\n              return Object.keys(e).some(s => {\r\n                if (cols.includes(s)) {\r\n                  if(e[s] === undefined || e[s] === null){  return false;  }\r\n                  else if(typeof(e[s]) === 'object'){return e[s].name.toString().toUpperCase().includes(action.payload.toString().toUpperCase()); }\r\n                  else{ return e[s].toString().toUpperCase().includes(action.payload.toString().toUpperCase()); }\r\n                } else {\r\n                  return false;\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            filtered = [];\r\n          }\r\n\r\n        if(state.selectedAll){\r\n            return{\r\n              ...state,\r\n              valueSearch: action.payload,\r\n              dataSource: filtered,\r\n              selected: Object.values(filtered).map(n => n.id)\r\n            } \r\n          }\r\n        else{\r\n            return{\r\n              ...state,\r\n              valueSearch: action.payload,\r\n              dataSource: filtered\r\n            }\r\n        }\r\n      case ROW_CLICK:\r\n          const sIndex = state.selected.indexOf(action.payload);\r\n          let newSelected = [];\r\n          if (sIndex === -1) newSelected = newSelected.concat(state.selected, action.payload);\r\n          else if (sIndex === 0) newSelected = newSelected.concat(state.selected.slice(1));\r\n          else if (sIndex === state.selected.length - 1) newSelected = newSelected.concat(state.selected.slice(0, -1));\r\n          else if (sIndex > 0) {\r\n            newSelected = newSelected.concat( state.selected.slice(0, sIndex), state.selected.slice(sIndex + 1) );\r\n          }\r\n        return {\r\n            ...state,\r\n            selected: [...newSelected] \r\n        }\r\n      case RESELECT:\r\n        return {\r\n            ...state,\r\n            selected: [...action.checked] \r\n        }\r\n      case UPDATE_FORM:\r\n        if(action.payload){\r\n          let data = {[action.payload.pgInput] : {...action.payload}}\r\n          return{\r\n            ...state,\r\n            cDataStore: {...state.cDataStore, ...data}\r\n          }\r\n        }\r\n        else{\r\n          return {\r\n            ...state,\r\n            cDataStore: {}\r\n          }\r\n        }\r\n    \r\n      case TOOGLE_LOADING: \r\n        return{\r\n            ...state,\r\n            isLoading: action.payload\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\config.js",["202"],"\r\nconst isLocalhost = Boolean(\r\n     window.location.hostname === 'localhost' ||\r\n     window.location.hostname.includes('testapp') ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n);\r\n\r\nexport default {\r\n    defaultPath: '/dashboard',\r\n    basename: 'react/default', // only at build time to set, like \r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'default', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n    \r\n    \r\n    baseURL:  isLocalhost ? 'http://localhost:5000/' : 'ISAPI.dll/',\r\n    apiURL: isLocalhost ? 'http://localhost:5000/v1/': 'ISAPI.dll/api/',\r\n\r\n    month: [\r\n        { \"abbreviation\": \"Jan\", \"name\": \"January\", 'value': '0' },\r\n        { \"abbreviation\": \"Feb\", \"name\": \"February\", 'value': '1' },\r\n        { \"abbreviation\": \"Mar\", \"name\": \"March\", 'value': '2' },\r\n        { \"abbreviation\": \"Apr\", \"name\": \"April\", 'value': '3' },\r\n        { \"abbreviation\": \"May\", \"name\": \"May\", 'value': '4' },\r\n        { \"abbreviation\": \"Jun\", \"name\": \"June\", 'value': '5' },\r\n        { \"abbreviation\": \"Jul\", \"name\": \"July\", 'value': '6', },\r\n        { \"abbreviation\": \"Aug\", \"name\": \"August\", 'value': '7' },\r\n        { \"abbreviation\": \"Sep\", \"name\": \"September\", 'value': '8' },\r\n        { \"abbreviation\": \"Oct\", \"name\": \"October\", 'value': '9' },\r\n        { \"abbreviation\": \"Nov\", \"name\": \"November\", 'value': '10' },\r\n        { \"abbreviation\": \"Dec\", \"name\": \"December\", 'value': '11' }\r\n    ]\r\n\r\n};\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\setAuthToken.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\Nav.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rpage.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\authType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\isEmpty.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\dataType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\Auth.js",["203"],"import React, {useEffect, useState} from \"react\";\nimport * as C from \"./StyledC\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TOOGLE_LOADING } from '../../services/types/authType';\nimport { login, register } from '../../services/actions/authAction';\nimport \"./styles.css\";\n\nfunction Auth() {\n  console.log('render auth')\n  const [signIn, toggle] = useState(true); \n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(s => s.auth.isAuthenticated);\n  const history = useHistory();\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('admin@admin.com');\n  const [password, setPassword] = useState('admin');\n  const [role] = useState('');\n  const [showPass, setshowPass] = useState(false);\n\n  useEffect(() => {\n    if(isAuthenticated){\n       history.push('/');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  const handleOnSubmitLogin = (e) =>{\n    e.preventDefault();\n    dispatch({type: TOOGLE_LOADING, payload: true}); \n    dispatch(login({email, password, showPass}, history));  \n  }\n\n  const handleOnSubmitRegister = (e) => {\n    e.preventDefault();\n    dispatch({type: TOOGLE_LOADING, payload: true}); \n    dispatch(register({name, email, password, role }, history));\n  }\n\n  const handleOnChange = (e) => {\n      if (e.target.name === 'name') { setName(e.target.value) }\n      else if(e.target.name === 'email') { setEmail(e.target.value) }\n      else if(e.target.name === 'password') { setPassword(e.target.value) }\n    }\n\n  const handleClickShowPassword = () => { setshowPass(!showPass) } \n\n  return (\n    <C.Container>\n      <C.SignUpContainer signingIn={signIn}>\n        <C.Form onSubmit={ handleOnSubmitRegister }>\n          <C.Title>Create Account</C.Title>\n          <C.Input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={handleOnChange} value={name} />\n          <C.Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleOnChange} value={email} />\n          <C.Input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleOnChange} value={password}/>\n          <input type=\"hidden\" name=\"role_id\" id=\"role_id\" value=\"2\"/>\n          <C.Button>Sign Up</C.Button>\n        </C.Form>\n      </C.SignUpContainer>\n      <C.SignInContainer signingIn={signIn}>\n        <C.Form onSubmit={ handleOnSubmitLogin }> \n          <C.Title>Sign in</C.Title>\n          <C.Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleOnChange} value={email} />\n          <C.Input type=\"password\" placeholder=\"Password\"  name=\"password\" onChange={handleOnChange} value={password} />\n          <C.Anchor href=\"#\">Forgot your password?</C.Anchor>\n          <C.Button type=\"submit\">Sign In</C.Button>\n        </C.Form>\n      </C.SignInContainer>\n      <C.OverlayContainer signingIn={signIn}>\n        <C.Overlay signingIn={signIn}>\n          <C.LeftOverlayPanel signingIn={signIn}>\n            <C.Title>Welcome Back!</C.Title>\n            <C.Paragraph>\n              To keep connected with us please login with your personal info\n            </C.Paragraph>\n            <C.GhostButton onClick={() => toggle(true)}>\n              Sign In\n            </C.GhostButton>\n          </C.LeftOverlayPanel>\n          <C.RightOverlayPanel signingIn={signIn}>\n            <C.Title>Hello, Friend!</C.Title>\n            <C.Paragraph>\n              Enter your personal details and start journey with us\n            </C.Paragraph>\n            <C.GhostButton onClick={() => toggle(false)}>\n              Sign Up\n            </C.GhostButton>\n          </C.RightOverlayPanel>\n        </C.Overlay>\n      </C.OverlayContainer>\n    </C.Container>\n  );\n}\n\nconst areEqual = (prevProps, nextProps) => true;\nexport default React.memo(Auth, areEqual);\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\tableType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\StyledC.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\home\\Home.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\Data.js",["204","205","206","207"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport ToolsAction from './ToolsAction';\r\nimport Header from '../template/Header';\r\nimport TabPanel, {Item} from 'devextreme-react/tab-panel';\r\nimport GridProduct from './GridProduct';\r\nimport GridSupplier from './GridSupplier';\r\nimport GridCustomer from './GridCustomer';\r\nimport GridBrand from './GridBrand';\r\nimport GridCategory from './GridCategory';\r\nimport GridQty from './GridQty';\r\nimport { getData } from \"../../services/actions/dataAction\";\r\nimport '../../styles/sass/component/_data.scss'\r\n\r\nfunction Data() {\r\n    const refGridProduct = useRef(null);\r\n    const refGridCustomer = useRef(null)\r\n    const refGridBrand = useRef(null)\r\n    const refGridSupplier = useRef(null)\r\n    const refGridCategory = useRef(null)\r\n    const refGridQty = useRef(null)\r\n    const refPanel = useRef(null);\r\n    const [tabActive, setTabActive] = useState(0);\r\n    const dispatch = useDispatch();\r\n    // const productDS = useSelector(s => s.data.dataProduct);\r\n    \r\n    const onSelectionChanged = (args) => {\r\n        if(args.name === 'selectedIndex') {\r\n            setTabActive(args.value);\r\n          }\r\n    }\r\n\r\n    const onInitialized = (args) =>{ dispatch(getData(tabActive)); }\r\n\r\n    const onActionClick = (e) => {\r\n        if(e.itemIndex === 0){\r\n           refGridProduct.current.instance.addRow(); \r\n        }\r\n    }\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div className=\"content-container data\">\r\n        <Header />\r\n        <div className=\"content-data\">\r\n            {/* < ToolsAction onItemClick={onActionClick} /> */}\r\n            <TabPanel\r\n                ref ={refPanel}\r\n                height={\"100%\"}\r\n                selectedIndex={tabActive}\r\n                onOptionChanged={onSelectionChanged}\r\n                onSelectionChanged={ onInitialized }\r\n                onInitialized={ onInitialized }\r\n                loop={false}\r\n                animationEnabled={true}\r\n                swipeEnabled={true}\r\n            > \r\n                <Item title=\"Barang\" key={0} >\r\n                    <GridProduct tab={0} vref={refGridProduct} />\r\n                </Item>\r\n                <Item title=\"Supplier\" ke={1} >\r\n                    <GridSupplier tab={1} vref={refGridSupplier} />\r\n                </Item>\r\n                <Item title=\"Pelanggan\" ke={2} >\r\n                    <GridCustomer tab={2} vref={refGridCustomer}/>\r\n                </Item>\r\n                <Item title=\"Merk\" ke={3} >\r\n                    <GridBrand tab={3} vref={refGridBrand}/>\r\n                </Item>\r\n                <Item title=\"Kategori\" ke={4} >\r\n                    <GridCategory tab={4} vref={refGridCategory}/>\r\n                </Item>\r\n                <Item title=\"Satuan\" key={5} >\r\n                    <GridQty tab={5} vref={refGridQty}/>\r\n                </Item>\r\n            </TabPanel>\r\n        </div>\r\n \r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(Data, areEqual);\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\report\\Report.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\Sales.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\purchase\\Purchase.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\return\\Return.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\setting\\Setting.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridSupplier.js",["208","209","210","211","212","213","214"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\nfunction GridSupplier({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const supplierDS = useSelector(s => s.data.dataSupplier);\r\n    const isLoad = false;\r\n    const refImageUploader = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    console.log(tab,'render grid supplier');\r\n    return (\r\n        <DataGrid\r\n            ref={vref}\r\n            id={'gridViewSupp'}\r\n            dataSource= { supplierDS}\r\n            columnAutoWidth={true}\r\n            height= {\"100%\"}\r\n            width= {\"100%\"}\r\n            showBorders={false}\r\n            showColumnLines= {false}\r\n            showRowLines={true}\r\n            rowAlternationEnabled={true}\r\n            onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n            allowColumnResizing={true}\r\n            onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n            onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n            onRowInserted = { (e) => {\r\n                let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                 gConfig.onRowInserted(e, gConfig.SUPPLIER_TAB_INDEX, uploadedImg)(dispatch) \r\n                }\r\n             }\r\n            onRowUpdated = { (e) => { \r\n                let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                gConfig.onRowUpdated(e, gConfig.SUPPLIER_TAB_INDEX, uploadedImg)(dispatch) }\r\n            }\r\n            onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.SUPPLIER_TAB_INDEX, true)(dispatch) }}\r\n        > \r\n    <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"address\" />\r\n                        <Item dataField=\"city\" />\r\n                        <Item dataField=\"province\" />\r\n                        <Item dataField=\"phone\" />\r\n                        <Item dataField=\"phone2\" />\r\n                        <Item dataField=\"store\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />     \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"address\" caption=\"ALAMAT\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"city\" caption=\"KOTA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"province\" caption=\"PROVINSI\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone\" caption=\"TLP\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone2\" caption=\"TLP2\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"store\" caption=\"TOKO\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n           \r\n        </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridSupplier, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ToolsAction.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridProduct.js",["215","216","217","218","219"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\nimport { getProductSupport } from \"../../services/actions/dataAction\";\r\n\r\nfunction GridTable({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('single');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const productDS = useSelector(s => s.data.dataProduct);\r\n    const [brandDS, setBrandDS] = useState(null);\r\n    const [categoryDS, setCategoryDS] = useState(null);\r\n    const [qtyDS, setQtyDS]= useState(null);\r\n    const [supplierDS, setSupplierDS] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const refImageUploader = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getProductSupport().then((res) => {\r\n            if(res){\r\n                setBrandDS(res.brand.data);\r\n                setCategoryDS(res.category.data);\r\n                setQtyDS(res.qtytype.data);\r\n                setSupplierDS(res.supplier.data);\r\n            }\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewPd'}\r\n                dataSource= { productDS }\r\n                //onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => {\r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                     gConfig.onRowInserted(e, gConfig.TAB_INDEX.PRODUCT_TAB_INDEX, uploadedImg)(dispatch) \r\n                    }\r\n                 }\r\n                onRowUpdated = { (e) => { \r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                    gConfig.onRowUpdated(e, gConfig.TAB_INDEX.PRODUCT_TAB_INDEX, uploadedImg)(dispatch) }\r\n                }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, 0, true)(dispatch) }}\r\n            > \r\n\r\n            {/* <Scrolling mode={\"virtual\"} /> */}\r\n            {/* <LoadPanel enabled={false}  showPane={false} /> */}\r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\" editorOptions={{ disabled: true }} />\r\n                        <Item dataField=\"name\" />   \r\n                        <Item dataField=\"brand\"  editorType=\"dxLookup\" editorOptions={{  dataSource: brandDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"category\"  editorType=\"dxLookup\" editorOptions={{ dataSource: categoryDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"bprice\" editorType=\"dxNumberBox\" editorOptions={{ format: \"Rp #,##0.##\" }} />\r\n                        <Item dataField=\"sprice\" editorType=\"dxNumberBox\" editorOptions={{ format: \"Rp #,##0.##\" }}/>\r\n                        <Item dataField=\"stock\"  editorType=\"dxNumberBox\"/>\r\n                        <Item dataField=\"qtytype\"  editorType=\"dxLookup\" editorOptions={{  dataSource: qtyDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"color\" />\r\n                        <Item dataField=\"supplier\"  editorType=\"dxLookup\" editorOptions={{  dataSource: supplierDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"desc\" />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />          \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true} allowEditing={false}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"brand\" caption=\"MERK\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                <Lookup dataSource={brandDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"sprice\" caption=\"JUAL\" dataType=\"number\" format={{type:\"fixedPoint\", precision:2}} cssClass=\"row-vertical-align\" /> \r\n            <Column dataField=\"bprice\" caption=\"BELI\" dataType=\"number\" format={{type:\"fixedPoint\", precision:2}}  cssClass=\"row-vertical-align\" />    \r\n            <Column dataField=\"stock\" caption=\"STOCK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"qtytype\" caption=\"SATUAN\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={qtyDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"category\" caption=\"KATEGORI\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={categoryDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"color\" caption=\"WARNA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"supplier\" caption=\"PENYEDIA\" visible={true} cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={supplierDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            {/* <Column dataField=\"duedate\" caption=\"DUE DATE\" visible={true} dataType=\"date\" format=\"dd/MM/yyyy\" width={120} cssClass=\"row-vertical-align\" /> */}\r\n            <Column dataField=\"image\" caption=\"GAMBAR\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"KET. \" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridTable, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCustomer.js",["220","221","222","223","224","225","226","227","228"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridCustomer({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const customerDS = useSelector(s => s.data.dataCustomer);\r\n    const isLoad = false;\r\n    const refImageUploader = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewCus'}\r\n               // key={'evdno'}\r\n                dataSource= { customerDS }\r\n                onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                //noDataText={isLoad ? '' : 'No Data !'}\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => {\r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                     gConfig.onRowInserted(e, gConfig.CUSTOMER_TAB_INDEX, uploadedImg)(dispatch) \r\n                    }\r\n                 }\r\n                onRowUpdated = { (e) => { \r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                    gConfig.onRowUpdated(e, gConfig.CUSTOMER_TAB_INDEX, uploadedImg)(dispatch) }\r\n                }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.CUSTOMER_TAB_INDEX, true)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"address\" />\r\n                        <Item dataField=\"city\" />\r\n                        <Item dataField=\"province\" />\r\n                        <Item dataField=\"phone\" />\r\n                        <Item dataField=\"phone2\" />\r\n                        <Item dataField=\"store\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />     \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"address\" caption=\"ALAMAT\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"city\" caption=\"KOTA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"province\" caption=\"PROVINSI\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone\" caption=\"TLP\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone2\" caption=\"TLP2\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"store\" caption=\"TOKO\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridCustomer, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridBrand.js",["229","230","231"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridBrand({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const brandDS = useSelector(s => s.data.dataBrand);\r\n    const isLoad = false;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewBrd'}\r\n                dataSource= { brandDS }\r\n                //onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.BRAND_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridBrand, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCategory.js",["232","233","234","235"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\nfunction GridCategory({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const categoryDS = useSelector(s => s.data.dataCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    console.log(tab,'render grid Category');\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewCty'}\r\n                dataSource= { categoryDS }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.CATEGORY_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.CATEGORY_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.CATEGORY_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"code\" />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"code\" caption=\"CODE\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridCategory, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridQty.js",["236","237","238","239","240"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridQty({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const qtyDS = useSelector(s => s.data.dataQtytype);\r\n    const isLoad = false;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data'\r\n        )// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewQty'}\r\n                dataSource= { qtyDS }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.BRAND_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={4} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"code\" />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"code\" caption=\"CODE\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridQty, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\dataAction.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\template\\Header.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ConfigGrids.js",["241","242","243","244"],"import React from 'react';\r\nimport { Column, Lookup } from 'devextreme-react/data-grid';\r\nimport isEmpty from '../../services/helper/isEmpty';\r\nimport { storeData, updateData, deleteData } from \"../../services/actions/dataAction\";\r\n\r\n\r\nexport const PRODUCT_TAB_INDEX = 0\r\nexport const SUPPLIER_TAB_INDEX = 1\r\nexport const CUSTOMER_TAB_INDEX = 2\r\nexport const BRAND_TAB_INDEX = 3\r\nexport const CATEGORY_TAB_INDEX = 4\r\nexport const QTYTYPE_TAB_INDEX = 5\r\nexport const COLOR_TAB_INDEX = 6\r\n\r\nexport const onToolbarPreparing = (e, selectionMode, setSelectionMode, expandMode, setExpandMode ) => {\r\n    var dataGrid = e.component;\r\n    var toolbarItems = e.toolbarOptions.items;\r\n //   toolbarItems[0].visible = false;\r\n    toolbarItems.unshift(\r\n    {\r\n        widget: \"dxButton\",\r\n        name: \"btnMulti\",\r\n        locateInMenu: \"auto\",\r\n        location: \"after\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: selectionMode === 'multiple' ? \"Pilih Satu Baris\" : \"Pilih Sekaligus\" ,\r\n            elementAttr: { \"id\": \"btnMulti\" },\r\n            icon: \"check\", //\"fa fa-check\",\r\n            text: \"Pilih Sekaligus\",\r\n            onClick: (e) => { setSelectionMode(selectionMode === 'multiple' ? \"single\" : \"multiple\" ); } // this.selectionModeChanged.bind(this)\r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        name: \"btnFilter\",\r\n        locateInMenu: \"auto\",\r\n        location: \"after\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: \"Saring Baris\",\r\n            elementAttr: { \"id\": \"btnFilter\" },\r\n            icon: \"filter\", //\"fa fa-filter\",\r\n            text: \"Saring Baris\",\r\n            onClick: function (e) {\r\n                var filter = dataGrid.option(\"filterRow.visible\") === false;\r\n                dataGrid.option(\"filterRow.visible\", filter);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        location: \"after\",\r\n        name: \"btnExpand\",\r\n        locateInMenu: \"auto\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: expandMode ? \"Persempit Baris\" : \"Perluas Baris\", \r\n            elementAttr: { \"id\": \"btnExpand\" },\r\n            icon: expandMode ? \"collapse\" : \"expand\",\r\n            text: expandMode ? \"Persempit Baris\" : \"Perluas Baris\",\r\n            onClick: (e) => {\r\n                setExpandMode(!expandMode);\r\n            } \r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        location: \"after\",\r\n        name: \"btnMultiDelete\",\r\n        locateInMenu: \"auto\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        visible: true,\r\n        options: {\r\n            hint: \"Hapus Sekaligus\", \r\n            elementAttr: { \"id\": \"btnMultiDel\" },\r\n            icon: \"trash\",\r\n            text: \"Hapus Sekaligus\",\r\n            onClick: (e) => {\r\n              //  setExpandMode(!expandMode);\r\n            } \r\n        }\r\n    }\r\n    );\r\n};\r\n\r\nexport const changeStateSelectionChange =  (e) => {\r\n    console.log(e);\r\n}\r\n\r\nexport const onContentReady = (e, isLoad) => {\r\n    if (isLoad) { e.component.beginCustomLoading(); } \r\n    else{ e.component.endCustomLoading(); }\r\n    var scrollable = e.component.getScrollable();  \r\n    scrollable.scrollTo(scrollable.scrollHeight()); \r\n}\r\n\r\nexport const onInitNewRow = (e) => {\r\n    e.data.number = e.component.option('dataSource').length + 1;\r\n}  \r\n\r\nexport const onRowInserted = (e, tab, image) => dispatch => {\r\n    if(image){ e.data.image = image; }\r\n    e.data.code = e.data.number;\r\n    dispatch(storeData(tab, e.data));\r\n}\r\n\r\nexport const onRowUpdated = (e, tab, image) => dispatch => {\r\n    dispatch(updateData(tab, e.data, image));\r\n}\r\n\r\nexport const onRowRemoved = (e, tab, hasImage) => dispatch => {\r\n    let data = {};\r\n    const selectedRow = e.component.getSelectedRowsData();\r\n    if(selectedRow.length > 0) { \r\n        data.ids = selectedRow.map(el => el._id)\r\n       if (hasImage) data.imgs = selectedRow.map(el => el.image);\r\n    }\r\n     else if(e.data) {\r\n         data.ids = []; data.imgs = [];\r\n         data.ids.push(e.data._id)\r\n       if(hasImage) data.imgs.push(e.data.image);\r\n    }\r\n    dispatch(deleteData(data, tab));\r\n}","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\tableAction.js",[],["245","246"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftSecSales.js",["247","248","249"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightSecSales.js",["250","251","252","253","254","255","256"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\ScanSales.js",["257","258","259","260","261","262","263"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\ItemSales.js",["264"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\NoteSales.js",["265","266","267","268"],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":12,"column":1,"nodeType":"275","endLine":46,"endColumn":2},{"ruleId":"273","severity":1,"message":"274","line":22,"column":3,"nodeType":"275","endLine":67,"endColumn":4},{"ruleId":"273","severity":1,"message":"274","line":24,"column":1,"nodeType":"275","endLine":149,"endColumn":4},{"ruleId":"273","severity":1,"message":"276","line":13,"column":1,"nodeType":"275","endLine":57,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":46,"column":9,"nodeType":"279","messageId":"280","endLine":46,"endColumn":32},{"ruleId":"277","severity":1,"message":"281","line":1,"column":34,"nodeType":"279","messageId":"280","endLine":1,"endColumn":43},{"ruleId":"277","severity":1,"message":"282","line":2,"column":9,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"277","severity":1,"message":"283","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":19},{"ruleId":"277","severity":1,"message":"284","line":35,"column":11,"nodeType":"279","messageId":"280","endLine":35,"endColumn":24},{"ruleId":"277","severity":1,"message":"285","line":3,"column":28,"nodeType":"279","messageId":"280","endLine":3,"endColumn":36},{"ruleId":"277","severity":1,"message":"286","line":3,"column":98,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"287","line":3,"column":109,"nodeType":"279","messageId":"280","endLine":3,"endColumn":118},{"ruleId":"277","severity":1,"message":"288","line":3,"column":129,"nodeType":"279","messageId":"280","endLine":3,"endColumn":134},{"ruleId":"277","severity":1,"message":"289","line":3,"column":136,"nodeType":"279","messageId":"280","endLine":3,"endColumn":144},{"ruleId":"277","severity":1,"message":"290","line":3,"column":152,"nodeType":"279","messageId":"280","endLine":3,"endColumn":158},{"ruleId":"277","severity":1,"message":"291","line":12,"column":11,"nodeType":"279","messageId":"280","endLine":12,"endColumn":17},{"ruleId":"277","severity":1,"message":"285","line":3,"column":28,"nodeType":"279","messageId":"280","endLine":3,"endColumn":36},{"ruleId":"277","severity":1,"message":"286","line":3,"column":98,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"287","line":3,"column":109,"nodeType":"279","messageId":"280","endLine":3,"endColumn":118},{"ruleId":"277","severity":1,"message":"288","line":3,"column":129,"nodeType":"279","messageId":"280","endLine":3,"endColumn":134},{"ruleId":"277","severity":1,"message":"289","line":3,"column":136,"nodeType":"279","messageId":"280","endLine":3,"endColumn":144},{"ruleId":"277","severity":1,"message":"285","line":3,"column":28,"nodeType":"279","messageId":"280","endLine":3,"endColumn":36},{"ruleId":"277","severity":1,"message":"286","line":3,"column":98,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"287","line":3,"column":109,"nodeType":"279","messageId":"280","endLine":3,"endColumn":118},{"ruleId":"277","severity":1,"message":"288","line":3,"column":129,"nodeType":"279","messageId":"280","endLine":3,"endColumn":134},{"ruleId":"277","severity":1,"message":"289","line":3,"column":136,"nodeType":"279","messageId":"280","endLine":3,"endColumn":144},{"ruleId":"277","severity":1,"message":"290","line":3,"column":152,"nodeType":"279","messageId":"280","endLine":3,"endColumn":158},{"ruleId":"292","severity":1,"message":"293","line":32,"column":17,"nodeType":"294","endLine":32,"endColumn":39},{"ruleId":"292","severity":1,"message":"293","line":33,"column":17,"nodeType":"294","endLine":33,"endColumn":33},{"ruleId":"292","severity":1,"message":"293","line":34,"column":17,"nodeType":"294","endLine":34,"endColumn":32},{"ruleId":"277","severity":1,"message":"286","line":3,"column":87,"nodeType":"279","messageId":"280","endLine":3,"endColumn":96},{"ruleId":"277","severity":1,"message":"287","line":3,"column":98,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"291","line":12,"column":11,"nodeType":"279","messageId":"280","endLine":12,"endColumn":17},{"ruleId":"277","severity":1,"message":"286","line":3,"column":87,"nodeType":"279","messageId":"280","endLine":3,"endColumn":96},{"ruleId":"277","severity":1,"message":"287","line":3,"column":98,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"295","line":8,"column":27,"nodeType":"279","messageId":"280","endLine":8,"endColumn":43},{"ruleId":"277","severity":1,"message":"296","line":9,"column":24,"nodeType":"279","messageId":"280","endLine":9,"endColumn":37},{"ruleId":"277","severity":1,"message":"286","line":3,"column":87,"nodeType":"279","messageId":"280","endLine":3,"endColumn":96},{"ruleId":"277","severity":1,"message":"287","line":3,"column":98,"nodeType":"279","messageId":"280","endLine":3,"endColumn":107},{"ruleId":"277","severity":1,"message":"288","line":3,"column":118,"nodeType":"279","messageId":"280","endLine":3,"endColumn":123},{"ruleId":"277","severity":1,"message":"289","line":3,"column":125,"nodeType":"279","messageId":"280","endLine":3,"endColumn":133},{"ruleId":"277","severity":1,"message":"291","line":12,"column":11,"nodeType":"279","messageId":"280","endLine":12,"endColumn":17},{"ruleId":"277","severity":1,"message":"297","line":1,"column":8,"nodeType":"279","messageId":"280","endLine":1,"endColumn":13},{"ruleId":"277","severity":1,"message":"298","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":16},{"ruleId":"277","severity":1,"message":"290","line":2,"column":18,"nodeType":"279","messageId":"280","endLine":2,"endColumn":24},{"ruleId":"277","severity":1,"message":"299","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":15},{"ruleId":"269","replacedBy":"300"},{"ruleId":"271","replacedBy":"301"},{"ruleId":"277","severity":1,"message":"302","line":2,"column":9,"nodeType":"279","messageId":"280","endLine":2,"endColumn":12},{"ruleId":"277","severity":1,"message":"303","line":2,"column":14,"nodeType":"279","messageId":"280","endLine":2,"endColumn":17},{"ruleId":"277","severity":1,"message":"304","line":2,"column":19,"nodeType":"279","messageId":"280","endLine":2,"endColumn":23},{"ruleId":"277","severity":1,"message":"305","line":1,"column":16,"nodeType":"279","messageId":"280","endLine":1,"endColumn":24},{"ruleId":"277","severity":1,"message":"281","line":1,"column":26,"nodeType":"279","messageId":"280","endLine":1,"endColumn":35},{"ruleId":"277","severity":1,"message":"282","line":2,"column":9,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"277","severity":1,"message":"306","line":2,"column":22,"nodeType":"279","messageId":"280","endLine":2,"endColumn":33},{"ruleId":"277","severity":1,"message":"302","line":3,"column":9,"nodeType":"279","messageId":"280","endLine":3,"endColumn":12},{"ruleId":"277","severity":1,"message":"303","line":3,"column":14,"nodeType":"279","messageId":"280","endLine":3,"endColumn":17},{"ruleId":"277","severity":1,"message":"304","line":3,"column":19,"nodeType":"279","messageId":"280","endLine":3,"endColumn":23},{"ruleId":"277","severity":1,"message":"305","line":1,"column":16,"nodeType":"279","messageId":"280","endLine":1,"endColumn":24},{"ruleId":"277","severity":1,"message":"281","line":1,"column":26,"nodeType":"279","messageId":"280","endLine":1,"endColumn":35},{"ruleId":"277","severity":1,"message":"282","line":2,"column":9,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"277","severity":1,"message":"306","line":2,"column":22,"nodeType":"279","messageId":"280","endLine":2,"endColumn":33},{"ruleId":"277","severity":1,"message":"302","line":3,"column":9,"nodeType":"279","messageId":"280","endLine":3,"endColumn":12},{"ruleId":"277","severity":1,"message":"303","line":3,"column":14,"nodeType":"279","messageId":"280","endLine":3,"endColumn":17},{"ruleId":"277","severity":1,"message":"307","line":8,"column":7,"nodeType":"279","messageId":"280","endLine":8,"endColumn":21},{"ruleId":null,"fatal":true,"severity":2,"message":"308","line":13,"column":33},{"ruleId":"277","severity":1,"message":"305","line":1,"column":16,"nodeType":"279","messageId":"280","endLine":1,"endColumn":24},{"ruleId":"277","severity":1,"message":"281","line":1,"column":26,"nodeType":"279","messageId":"280","endLine":1,"endColumn":35},{"ruleId":"277","severity":1,"message":"282","line":2,"column":9,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"277","severity":1,"message":"306","line":2,"column":22,"nodeType":"279","messageId":"280","endLine":2,"endColumn":33},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'handleClickShowPassword' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'ToolsAction' is defined but never used.","'onActionClick' is assigned a value but never used.","'FormItem' is defined but never used.","'Scrolling' is defined but never used.","'LoadPanel' is defined but never used.","'Popup' is defined but never used.","'Position' is defined but never used.","'Lookup' is defined but never used.","'isLoad' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setSelectionMode' is assigned a value but never used.","'setExpandMode' is assigned a value but never used.","'React' is defined but never used.","'Column' is defined but never used.","'isEmpty' is defined but never used.",["309"],["310"],"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'passwordButton' is assigned a value but never used.","Parsing error: JSX attributes must only be assigned a non-empty expression\n\n\u001b[0m \u001b[90m 11 | \u001b[39m                    ref\u001b[33m=\u001b[39m{vref}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m                    id\u001b[33m=\u001b[39m{\u001b[32m'gridItemSales'\u001b[39m}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m                    dataSource\u001b[33m=\u001b[39m {  }\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m                    columnAutoWidth\u001b[33m=\u001b[39m{\u001b[36mtrue\u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m                    height\u001b[33m=\u001b[39m {\u001b[32m\"100%\"\u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m                    width\u001b[33m=\u001b[39m {\u001b[32m\"100%\"\u001b[39m}\u001b[0m","no-global-assign","no-unsafe-negation"]