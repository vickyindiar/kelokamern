[{"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\index.js":"1","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\App.js":"3","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\store.js":"4","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\authAction.js":"5","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rauth.js":"6","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\authReducer.js":"7","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\dataReducer.js":"8","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\tableReducer.js":"9","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\nav\\PrivateRoute.js":"10","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\AdminLayout.js":"11","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\_lib\\_spinner\\Spinner.js":"12","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\salesReducer.js":"13","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\config.js":"14","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\setAuthToken.js":"15","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\dataType.js":"16","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\isEmpty.js":"17","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rpage.js":"18","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\Auth.js":"19","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\Nav.js":"20","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\authType.js":"21","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\tableType.js":"22","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\salesType.js":"23","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\StyledC.js":"24","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\home\\Home.js":"25","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\Data.js":"26","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\report\\Report.js":"27","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\purchase\\Purchase.js":"28","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\Sales.js":"29","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\return\\Return.js":"30","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\setting\\Setting.js":"31","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ToolsAction.js":"32","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridProduct.js":"33","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridSupplier.js":"34","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridBrand.js":"35","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\dataAction.js":"36","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCustomer.js":"37","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridQty.js":"38","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCategory.js":"39","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftSecSales.js":"40","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\template\\Header.js":"41","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightSecSales.js":"42","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ConfigGrids.js":"43","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftNoteSales.js":"44","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftItemSales.js":"45","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftScanSales.js":"46","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightAccSaleInfo.js":"47","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightAccPaymentInfo.js":"48","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftItemCellCustom.js":"49","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\idrFormat.js":"50","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\IDRFormat.js":"51"},{"size":716,"mtime":1618889967346,"results":"52","hashOfConfig":"53"},{"size":5086,"mtime":1565835978478,"results":"54","hashOfConfig":"53"},{"size":2210,"mtime":1613377998036,"results":"55","hashOfConfig":"53"},{"size":571,"mtime":1619054410044,"results":"56","hashOfConfig":"53"},{"size":5652,"mtime":1613358366402,"results":"57","hashOfConfig":"53"},{"size":242,"mtime":1592893609449,"results":"58","hashOfConfig":"53"},{"size":1287,"mtime":1592902393690,"results":"59","hashOfConfig":"53"},{"size":1635,"mtime":1615969280257,"results":"60","hashOfConfig":"53"},{"size":4521,"mtime":1596441818641,"results":"61","hashOfConfig":"53"},{"size":552,"mtime":1612949802294,"results":"62","hashOfConfig":"53"},{"size":1229,"mtime":1592901035263,"results":"63","hashOfConfig":"53"},{"size":808,"mtime":1565835978464,"results":"64","hashOfConfig":"53"},{"size":990,"mtime":1619187388678,"results":"65","hashOfConfig":"53"},{"size":3394,"mtime":1612752765310,"results":"66","hashOfConfig":"53"},{"size":259,"mtime":1565835978481,"results":"67","hashOfConfig":"53"},{"size":391,"mtime":1615969504650,"results":"68","hashOfConfig":"53"},{"size":278,"mtime":1565835978480,"results":"69","hashOfConfig":"53"},{"size":1319,"mtime":1612948997890,"results":"70","hashOfConfig":"53"},{"size":3796,"mtime":1613359717941,"results":"71","hashOfConfig":"53"},{"size":17182,"mtime":1613359969478,"results":"72","hashOfConfig":"53"},{"size":216,"mtime":1592902335112,"results":"73","hashOfConfig":"53"},{"size":430,"mtime":1573098875953,"results":"74","hashOfConfig":"53"},{"size":43,"mtime":1619054410045,"results":"75","hashOfConfig":"53"},{"size":3967,"mtime":1592538210841,"results":"76","hashOfConfig":"53"},{"size":456,"mtime":1596076878422,"results":"77","hashOfConfig":"53"},{"size":3083,"mtime":1615878584687,"results":"78","hashOfConfig":"53"},{"size":291,"mtime":1565835978472,"results":"79","hashOfConfig":"53"},{"size":298,"mtime":1565835978471,"results":"80","hashOfConfig":"53"},{"size":901,"mtime":1619071890269,"results":"81","hashOfConfig":"53"},{"size":290,"mtime":1565835978473,"results":"82","hashOfConfig":"53"},{"size":294,"mtime":1565835978475,"results":"83","hashOfConfig":"53"},{"size":692,"mtime":1596430890553,"results":"84","hashOfConfig":"53"},{"size":8186,"mtime":1619364668267,"results":"85","hashOfConfig":"53"},{"size":5282,"mtime":1617935741463,"results":"86","hashOfConfig":"53"},{"size":3475,"mtime":1617931876479,"results":"87","hashOfConfig":"53"},{"size":11343,"mtime":1619060475613,"results":"88","hashOfConfig":"53"},{"size":5659,"mtime":1617932679389,"results":"89","hashOfConfig":"53"},{"size":3574,"mtime":1617936756230,"results":"90","hashOfConfig":"53"},{"size":3409,"mtime":1617932445648,"results":"91","hashOfConfig":"53"},{"size":523,"mtime":1619063781174,"results":"92","hashOfConfig":"53"},{"size":304,"mtime":1565835978476,"results":"93","hashOfConfig":"53"},{"size":1733,"mtime":1619272542885,"results":"94","hashOfConfig":"53"},{"size":4203,"mtime":1617931648122,"results":"95","hashOfConfig":"53"},{"size":543,"mtime":1619063544720,"results":"96","hashOfConfig":"53"},{"size":4347,"mtime":1619073594385,"results":"97","hashOfConfig":"53"},{"size":5346,"mtime":1619332143151,"results":"98","hashOfConfig":"53"},{"size":1951,"mtime":1619187388653,"results":"99","hashOfConfig":"53"},{"size":4932,"mtime":1619243648837,"results":"100","hashOfConfig":"53"},{"size":395,"mtime":1619063776451,"results":"101","hashOfConfig":"53"},{"size":653,"mtime":1619190602043,"results":"102","hashOfConfig":"53"},{"size":830,"mtime":1619192416708,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1j4fbwa",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"223","messages":"224","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"106"},"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\index.js",[],["228","229"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\App.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\store.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\authAction.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rauth.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\authReducer.js",["230"],"import { SET_AUTH, ERR_AUTH, TOOGLE_LOADING, STOP_SPNNER, SET_FIRST_LOAD } from '../types/authType';\r\nimport isEmpty from '../helper/isEmpty';\r\n\r\nconst initialState = {\r\n    isAuthenticated : false,\r\n    errAuthMessage:'',\r\n    loading: false,\r\n    firstLoad: true,\r\n    spinner: true,\r\n    user: ''\r\n};\r\nexport default function(state = initialState, action){\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthenticated : !isEmpty(action.payload.user),\r\n                user: { ...action.payload.user },\r\n                spinner: false,\r\n            }\r\n        case ERR_AUTH:\r\n            return {\r\n                ...state, \r\n                isAuthenticated: false,\r\n                errAuthMessage: action.payload,\r\n                spinner: false\r\n            }\r\n        case SET_FIRST_LOAD:\r\n            return{\r\n                ...state,\r\n                firstLoad: action.payload\r\n            }\r\n        case TOOGLE_LOADING: \r\n            return{\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case STOP_SPNNER:\r\n            return {\r\n                ...state,\r\n                spinner: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\dataReducer.js",["231"],"import {  \r\n          CHANGE_TAB,\r\n          GET_PRODUCT,\r\n          GET_SUPPLIER,\r\n          GET_CUSTOMER,\r\n          GET_BRAND,\r\n          GET_CATEGORY,\r\n          GET_QTYTYPE,\r\n          GET_COLOR\r\n          } from \"../types/dataType\";\r\n\r\nconst initialState = {\r\n    tabActive: -1,\r\n    dataProduct : [],\r\n    dataSupplier: [],\r\n    dataCustomer: [],\r\n    dataBrand: [],\r\n    dataCategory: [],\r\n    dataQtytype: [],\r\n    dataColor: []\r\n };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case CHANGE_TAB:\r\n        return {\r\n          ...state,\r\n          tabActive: action.payload.tabActive,\r\n        }\r\n      case GET_PRODUCT:\r\n        return{\r\n          ...state,\r\n          dataProduct: [...action.payload.dataSource ]\r\n        }\r\n      case GET_SUPPLIER:\r\n        return {\r\n          ...state,\r\n          dataSupplier: [...action.payload.dataSource ],\r\n        }\r\n      case GET_CUSTOMER:\r\n        return {\r\n          ...state,\r\n          dataCustomer: [...action.payload.dataSource ],\r\n        }\r\n      case GET_BRAND:\r\n        return {\r\n          ...state,\r\n          dataBrand: [...action.payload.dataSource ],\r\n        }\r\n      case GET_CATEGORY: \r\n        return {\r\n          ...state,\r\n          dataCategory: [...action.payload.dataSource ],\r\n        }\r\n      case GET_QTYTYPE:\r\n          return {\r\n            ...state,\r\n            dataQtytype: [...action.payload.dataSource ],\r\n          }\r\n      case GET_COLOR:\r\n        return {\r\n          ...state,\r\n          dataColor: [...action.payload.dataSource ],\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\tableReducer.js",["232"],"import { \r\n          TOOGLE_LOADING, LOAD_DATA, SELECT_ALL, \r\n          CHANGE_SORT, CHANGE_PAGE, CHANGE_ROW_PAGE, \r\n          CHANGE_FILTER, ROW_CLICK, RESELECT, UPDATE_FORM } from '../types/tableType';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    originDataSource: [],\r\n    dataSource: [],\r\n    columns: [],\r\n    order: \"asc\",\r\n    orderBy: \"\",\r\n    selected: [],\r\n    selectedAll: false,\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n    valueSearch:'',\r\n    selectTable: false,\r\n    showFilter: true,\r\n    isLoading: false,\r\n    cDataStore: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case LOAD_DATA:\r\n        return {\r\n          ...state, \r\n          columns: {...action.payload.columns },\r\n          originDataSource: {...action.payload.data },\r\n          dataSource: {...action.payload.data },\r\n          selected: []\r\n        }\r\n      case SELECT_ALL:\r\n          if (action.checked) {\r\n              return {\r\n                ...state,\r\n                selected: Object.values(state.dataSource).map(n => n.id),\r\n                selectedAll: !state.selectedAll\r\n              }\r\n          }\r\n          else{\r\n            return {\r\n              ...state,\r\n              selected: [],\r\n              selectedAll: false\r\n            }\r\n        }\r\n      case CHANGE_SORT: \r\n        const orderBy = action.payload;\r\n        let order = \"desc\";\r\n        if (state.orderBy === orderBy && state.order === order) {\r\n          order = \"asc\";\r\n        }\r\n        return{\r\n          ...state,\r\n          order,\r\n          orderBy\r\n        }\r\n      case CHANGE_PAGE: \r\n        return{\r\n          ...state,\r\n          page : action.payload\r\n        }\r\n      case CHANGE_ROW_PAGE:\r\n          return {\r\n            ...state,\r\n            rowsPerPage: action.payload\r\n        }\r\n      case CHANGE_FILTER:\r\n          let filtered = [];\r\n          let cols = [];\r\n\r\n          for(var prop in state.columns){ \r\n            cols.push(state.columns[prop].field);\r\n          }\r\n          if ( Object.values(state.originDataSource).length > 0) {\r\n            filtered = Object.values(state.originDataSource).filter(e => {\r\n              return Object.keys(e).some(s => {\r\n                if (cols.includes(s)) {\r\n                  if(e[s] === undefined || e[s] === null){  return false;  }\r\n                  else if(typeof(e[s]) === 'object'){return e[s].name.toString().toUpperCase().includes(action.payload.toString().toUpperCase()); }\r\n                  else{ return e[s].toString().toUpperCase().includes(action.payload.toString().toUpperCase()); }\r\n                } else {\r\n                  return false;\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            filtered = [];\r\n          }\r\n\r\n        if(state.selectedAll){\r\n            return{\r\n              ...state,\r\n              valueSearch: action.payload,\r\n              dataSource: filtered,\r\n              selected: Object.values(filtered).map(n => n.id)\r\n            } \r\n          }\r\n        else{\r\n            return{\r\n              ...state,\r\n              valueSearch: action.payload,\r\n              dataSource: filtered\r\n            }\r\n        }\r\n      case ROW_CLICK:\r\n          const sIndex = state.selected.indexOf(action.payload);\r\n          let newSelected = [];\r\n          if (sIndex === -1) newSelected = newSelected.concat(state.selected, action.payload);\r\n          else if (sIndex === 0) newSelected = newSelected.concat(state.selected.slice(1));\r\n          else if (sIndex === state.selected.length - 1) newSelected = newSelected.concat(state.selected.slice(0, -1));\r\n          else if (sIndex > 0) {\r\n            newSelected = newSelected.concat( state.selected.slice(0, sIndex), state.selected.slice(sIndex + 1) );\r\n          }\r\n        return {\r\n            ...state,\r\n            selected: [...newSelected] \r\n        }\r\n      case RESELECT:\r\n        return {\r\n            ...state,\r\n            selected: [...action.checked] \r\n        }\r\n      case UPDATE_FORM:\r\n        if(action.payload){\r\n          let data = {[action.payload.pgInput] : {...action.payload}}\r\n          return{\r\n            ...state,\r\n            cDataStore: {...state.cDataStore, ...data}\r\n          }\r\n        }\r\n        else{\r\n          return {\r\n            ...state,\r\n            cDataStore: {}\r\n          }\r\n        }\r\n    \r\n      case TOOGLE_LOADING: \r\n        return{\r\n            ...state,\r\n            isLoading: action.payload\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\nav\\PrivateRoute.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\AdminLayout.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\_lib\\_spinner\\Spinner.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\reducers\\salesReducer.js",["233"],"import { UPDATE_ITEMS } from '../types/salesType';\r\n\r\nconst initialState = {\r\n    dataItems: [\r\n        { number: 1, code:'LTCDO', name:'lutut', stock:5, qty:1, qtytype:'6029f897c92f86247017e7e2', price:1000, disc:100, subtotal:900 },\r\n        { number: 2, code:'lcdm', name:'mata kaki', stock:12, qty:1, qtytype:'6029f897c92f86247017e7e2', price:5000, disc:0, subtotal:5000 },\r\n    ],\r\n    dataInfo: [\r\n        {id: 1, title:'Sales Info', invno: 'inv02021', invdt:'02/02/2021', admin:'122334', customer:'6029f897c92f86247017e7e6'},\r\n        {id: 2, title:'Payment Info', subtotal:10000, disc:1000, addcharge:500, adddisc: 500, grandtotal:9000, cash:5000, changedue:4000, changeduetype:'due', transfer:4000}\r\n    ]\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case UPDATE_ITEMS:\r\n        return {\r\n            ...state,\r\n            dataItems: [...action.payload.dataItems ]\r\n          }\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\config.js",["234"],"\r\nconst isLocalhost = Boolean(\r\n     window.location.hostname === 'localhost' ||\r\n     window.location.hostname.includes('testapp') ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n);\r\n\r\nexport default {\r\n    defaultPath: '/dashboard',\r\n    basename: 'react/default', // only at build time to set, like \r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'default', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n    \r\n    \r\n    baseURL:  isLocalhost ? 'http://localhost:5000/' : 'ISAPI.dll/',\r\n    apiURL: isLocalhost ? 'http://localhost:5000/v1/': 'ISAPI.dll/api/',\r\n\r\n    month: [\r\n        { \"abbreviation\": \"Jan\", \"name\": \"January\", 'value': '0' },\r\n        { \"abbreviation\": \"Feb\", \"name\": \"February\", 'value': '1' },\r\n        { \"abbreviation\": \"Mar\", \"name\": \"March\", 'value': '2' },\r\n        { \"abbreviation\": \"Apr\", \"name\": \"April\", 'value': '3' },\r\n        { \"abbreviation\": \"May\", \"name\": \"May\", 'value': '4' },\r\n        { \"abbreviation\": \"Jun\", \"name\": \"June\", 'value': '5' },\r\n        { \"abbreviation\": \"Jul\", \"name\": \"July\", 'value': '6', },\r\n        { \"abbreviation\": \"Aug\", \"name\": \"August\", 'value': '7' },\r\n        { \"abbreviation\": \"Sep\", \"name\": \"September\", 'value': '8' },\r\n        { \"abbreviation\": \"Oct\", \"name\": \"October\", 'value': '9' },\r\n        { \"abbreviation\": \"Nov\", \"name\": \"November\", 'value': '10' },\r\n        { \"abbreviation\": \"Dec\", \"name\": \"December\", 'value': '11' }\r\n    ]\r\n\r\n};\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\setAuthToken.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\dataType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\isEmpty.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\routes\\rpage.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\Auth.js",["235"],"import React, {useEffect, useState} from \"react\";\nimport * as C from \"./StyledC\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TOOGLE_LOADING } from '../../services/types/authType';\nimport { login, register } from '../../services/actions/authAction';\nimport \"./styles.css\";\n\nfunction Auth() {\n  console.log('render auth')\n  const [signIn, toggle] = useState(true); \n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(s => s.auth.isAuthenticated);\n  const history = useHistory();\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('admin@admin.com');\n  const [password, setPassword] = useState('admin');\n  const [role] = useState('');\n  const [showPass, setshowPass] = useState(false);\n\n  useEffect(() => {\n    if(isAuthenticated){\n       history.push('/');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  const handleOnSubmitLogin = (e) =>{\n    e.preventDefault();\n    dispatch({type: TOOGLE_LOADING, payload: true}); \n    dispatch(login({email, password, showPass}, history));  \n  }\n\n  const handleOnSubmitRegister = (e) => {\n    e.preventDefault();\n    dispatch({type: TOOGLE_LOADING, payload: true}); \n    dispatch(register({name, email, password, role }, history));\n  }\n\n  const handleOnChange = (e) => {\n      if (e.target.name === 'name') { setName(e.target.value) }\n      else if(e.target.name === 'email') { setEmail(e.target.value) }\n      else if(e.target.name === 'password') { setPassword(e.target.value) }\n    }\n\n  const handleClickShowPassword = () => { setshowPass(!showPass) } \n\n  return (\n    <C.Container>\n      <C.SignUpContainer signingIn={signIn}>\n        <C.Form onSubmit={ handleOnSubmitRegister }>\n          <C.Title>Create Account</C.Title>\n          <C.Input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={handleOnChange} value={name} />\n          <C.Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleOnChange} value={email} />\n          <C.Input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleOnChange} value={password}/>\n          <input type=\"hidden\" name=\"role_id\" id=\"role_id\" value=\"2\"/>\n          <C.Button>Sign Up</C.Button>\n        </C.Form>\n      </C.SignUpContainer>\n      <C.SignInContainer signingIn={signIn}>\n        <C.Form onSubmit={ handleOnSubmitLogin }> \n          <C.Title>Sign in</C.Title>\n          <C.Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleOnChange} value={email} />\n          <C.Input type=\"password\" placeholder=\"Password\"  name=\"password\" onChange={handleOnChange} value={password} />\n          <C.Anchor href=\"#\">Forgot your password?</C.Anchor>\n          <C.Button type=\"submit\">Sign In</C.Button>\n        </C.Form>\n      </C.SignInContainer>\n      <C.OverlayContainer signingIn={signIn}>\n        <C.Overlay signingIn={signIn}>\n          <C.LeftOverlayPanel signingIn={signIn}>\n            <C.Title>Welcome Back!</C.Title>\n            <C.Paragraph>\n              To keep connected with us please login with your personal info\n            </C.Paragraph>\n            <C.GhostButton onClick={() => toggle(true)}>\n              Sign In\n            </C.GhostButton>\n          </C.LeftOverlayPanel>\n          <C.RightOverlayPanel signingIn={signIn}>\n            <C.Title>Hello, Friend!</C.Title>\n            <C.Paragraph>\n              Enter your personal details and start journey with us\n            </C.Paragraph>\n            <C.GhostButton onClick={() => toggle(false)}>\n              Sign Up\n            </C.GhostButton>\n          </C.RightOverlayPanel>\n        </C.Overlay>\n      </C.OverlayContainer>\n    </C.Container>\n  );\n}\n\nconst areEqual = (prevProps, nextProps) => true;\nexport default React.memo(Auth, areEqual);\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\admin\\Nav.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\authType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\tableType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\types\\salesType.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\auth\\StyledC.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\home\\Home.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\Data.js",["236","237","238","239"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport ToolsAction from './ToolsAction';\r\nimport Header from '../template/Header';\r\nimport TabPanel, {Item} from 'devextreme-react/tab-panel';\r\nimport GridProduct from './GridProduct';\r\nimport GridSupplier from './GridSupplier';\r\nimport GridCustomer from './GridCustomer';\r\nimport GridBrand from './GridBrand';\r\nimport GridCategory from './GridCategory';\r\nimport GridQty from './GridQty';\r\nimport { getData } from \"../../services/actions/dataAction\";\r\nimport '../../styles/sass/component/_data.scss'\r\n\r\nfunction Data() {\r\n    const refGridProduct = useRef(null);\r\n    const refGridCustomer = useRef(null)\r\n    const refGridBrand = useRef(null)\r\n    const refGridSupplier = useRef(null)\r\n    const refGridCategory = useRef(null)\r\n    const refGridQty = useRef(null)\r\n    const refPanel = useRef(null);\r\n    const [tabActive, setTabActive] = useState(0);\r\n    const dispatch = useDispatch();\r\n    // const productDS = useSelector(s => s.data.dataProduct);\r\n    \r\n    const onSelectionChanged = (args) => {\r\n        if(args.name === 'selectedIndex') {\r\n            setTabActive(args.value);\r\n          }\r\n    }\r\n\r\n    const onInitialized = (args) =>{ dispatch(getData(tabActive)); }\r\n\r\n    const onActionClick = (e) => {\r\n        if(e.itemIndex === 0){\r\n           refGridProduct.current.instance.addRow(); \r\n        }\r\n    }\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div className=\"content-container data\">\r\n        <Header />\r\n        <div className=\"content-data\">\r\n            {/* < ToolsAction onItemClick={onActionClick} /> */}\r\n            <TabPanel\r\n                ref ={refPanel}\r\n                height={\"100%\"}\r\n                selectedIndex={tabActive}\r\n                onOptionChanged={onSelectionChanged}\r\n                onSelectionChanged={ onInitialized }\r\n                onInitialized={ onInitialized }\r\n                loop={false}\r\n                animationEnabled={true}\r\n                swipeEnabled={true}\r\n            > \r\n                <Item title=\"Barang\" key={0} >\r\n                    <GridProduct tab={0} vref={refGridProduct} />\r\n                </Item>\r\n                <Item title=\"Supplier\" ke={1} >\r\n                    <GridSupplier tab={1} vref={refGridSupplier} />\r\n                </Item>\r\n                <Item title=\"Pelanggan\" ke={2} >\r\n                    <GridCustomer tab={2} vref={refGridCustomer}/>\r\n                </Item>\r\n                <Item title=\"Merk\" ke={3} >\r\n                    <GridBrand tab={3} vref={refGridBrand}/>\r\n                </Item>\r\n                <Item title=\"Kategori\" ke={4} >\r\n                    <GridCategory tab={4} vref={refGridCategory}/>\r\n                </Item>\r\n                <Item title=\"Satuan\" key={5} >\r\n                    <GridQty tab={5} vref={refGridQty}/>\r\n                </Item>\r\n            </TabPanel>\r\n        </div>\r\n \r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(Data, areEqual);\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\report\\Report.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\purchase\\Purchase.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\Sales.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\return\\Return.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\setting\\Setting.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ToolsAction.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridProduct.js",["240","241","242","243","244","245","246"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridSupplier.js",["247","248","249","250","251","252","253"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\nfunction GridSupplier({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const supplierDS = useSelector(s => s.data.dataSupplier);\r\n    const isLoad = false;\r\n    const refImageUploader = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    console.log(tab,'render grid supplier');\r\n    return (\r\n        <DataGrid\r\n            ref={vref}\r\n            id={'gridViewSupp'}\r\n            dataSource= { supplierDS}\r\n            columnAutoWidth={true}\r\n            height= {\"100%\"}\r\n            width= {\"100%\"}\r\n            showBorders={false}\r\n            showColumnLines= {false}\r\n            showRowLines={true}\r\n            rowAlternationEnabled={true}\r\n            onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n            allowColumnResizing={true}\r\n            onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n            onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n            onRowInserted = { (e) => {\r\n                let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                 gConfig.onRowInserted(e, gConfig.SUPPLIER_TAB_INDEX, uploadedImg)(dispatch) \r\n                }\r\n             }\r\n            onRowUpdated = { (e) => { \r\n                let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                gConfig.onRowUpdated(e, gConfig.SUPPLIER_TAB_INDEX, uploadedImg)(dispatch) }\r\n            }\r\n            onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.SUPPLIER_TAB_INDEX, true)(dispatch) }}\r\n        > \r\n    <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"address\" />\r\n                        <Item dataField=\"city\" />\r\n                        <Item dataField=\"province\" />\r\n                        <Item dataField=\"phone\" />\r\n                        <Item dataField=\"phone2\" />\r\n                        <Item dataField=\"store\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />     \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"address\" caption=\"ALAMAT\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"city\" caption=\"KOTA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"province\" caption=\"PROVINSI\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone\" caption=\"TLP\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone2\" caption=\"TLP2\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"store\" caption=\"TOKO\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n           \r\n        </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridSupplier, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridBrand.js",["254","255","256"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridBrand({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const brandDS = useSelector(s => s.data.dataBrand);\r\n    const isLoad = false;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewBrd'}\r\n                dataSource= { brandDS }\r\n                //onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.BRAND_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridBrand, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\actions\\dataAction.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCustomer.js",["257","258","259","260","261","262","263","264","265"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridCustomer({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const customerDS = useSelector(s => s.data.dataCustomer);\r\n    const isLoad = false;\r\n    const refImageUploader = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewCus'}\r\n               // key={'evdno'}\r\n                dataSource= { customerDS }\r\n                onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                //noDataText={isLoad ? '' : 'No Data !'}\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => {\r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                     gConfig.onRowInserted(e, gConfig.CUSTOMER_TAB_INDEX, uploadedImg)(dispatch) \r\n                    }\r\n                 }\r\n                onRowUpdated = { (e) => { \r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                    gConfig.onRowUpdated(e, gConfig.CUSTOMER_TAB_INDEX, uploadedImg)(dispatch) }\r\n                }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.CUSTOMER_TAB_INDEX, true)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"address\" />\r\n                        <Item dataField=\"city\" />\r\n                        <Item dataField=\"province\" />\r\n                        <Item dataField=\"phone\" />\r\n                        <Item dataField=\"phone2\" />\r\n                        <Item dataField=\"store\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />     \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"address\" caption=\"ALAMAT\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"city\" caption=\"KOTA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"province\" caption=\"PROVINSI\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone\" caption=\"TLP\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone2\" caption=\"TLP2\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"store\" caption=\"TOKO\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridCustomer, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridQty.js",["266","267","268","269","270"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridQty({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const qtyDS = useSelector(s => s.data.dataQtytype);\r\n    const isLoad = false;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data'\r\n        )// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewQty'}\r\n                dataSource= { qtyDS }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.BRAND_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={4} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"code\" />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"code\" caption=\"CODE\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridQty, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\GridCategory.js",["271","272","273","274"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\nfunction GridCategory({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const categoryDS = useSelector(s => s.data.dataCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    console.log(tab,'render grid Category');\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewCty'}\r\n                dataSource= { categoryDS }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.CATEGORY_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.CATEGORY_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.CATEGORY_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"code\" />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"code\" caption=\"CODE\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridCategory, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftSecSales.js",["275","276","277"],"import React from 'react'\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport LeftScanSales from './LeftScanSales';\r\nimport LeftItemSales from './LeftItemSales';\r\nimport LeftNoteSales from './LeftNoteSales';\r\n\r\nfunction LeftSecSales() {\r\n    return (\r\n        <div className={'left-section-sales'}>\r\n            <LeftScanSales />\r\n            <LeftItemSales />\r\n            <LeftNoteSales />\r\n        </div>\r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftSecSales, areEqual)","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\template\\Header.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightSecSales.js",["278","279","280","281","282","283","284"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport Accordion from 'devextreme-react/accordion';\r\nimport RightAccSaleInfo from './RightAccSaleInfo';\r\nimport RightAccPaymentInfo from './RightAccPaymentInfo';\r\n\r\n\r\nfunction RightSecSales() {\r\n    const dataInfo = useSelector(s => s.sales.dataInfo)\r\n    const [selected, setSelected] = useState(dataInfo[0]);\r\n\r\n    const itemTemplate = (data) => {\r\n        if(!data) return null;\r\n        if(data.id === 1){\r\n            return( <div className=\"component-right-sale\"> <RightAccSaleInfo data={data} /> </div> )\r\n        }\r\n        else if(data.id === 2){\r\n            return( <div className=\"component-right-payment\"> <RightAccPaymentInfo data={data} /> </div> )\r\n        }\r\n    }\r\n\r\n    const CustomTitle = (data) => {\r\n        return (<h4 className=\"accordion-sales-title\">{data.title}</h4>)\r\n    }\r\n\r\n    const selectionChanged = (e) => {\r\n        debugger;\r\n    }\r\n\r\n    return (\r\n        <div className={'right-section-sales'}>\r\n            <Card className={'mt-2 p-2 info-sales-card noppading'}>\r\n                <Accordion\r\n                    dataSource={dataInfo}\r\n                    collapsible={false}\r\n                    multiple={false}\r\n                    animationDuration={380}\r\n                   // selectedItems={selected}\r\n                  //  onSelectionChanged={selectionChanged}\r\n                   itemTitleRender={CustomTitle}\r\n                   itemRender={itemTemplate}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(RightSecSales, areEqual)\r\n\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\data\\ConfigGrids.js",["285","286","287","288"],"import React from 'react';\r\nimport { Column, Lookup } from 'devextreme-react/data-grid';\r\nimport isEmpty from '../../services/helper/isEmpty';\r\nimport { storeData, updateData, deleteData } from \"../../services/actions/dataAction\";\r\n\r\n\r\nexport const PRODUCT_TAB_INDEX = 0\r\nexport const SUPPLIER_TAB_INDEX = 1\r\nexport const CUSTOMER_TAB_INDEX = 2\r\nexport const BRAND_TAB_INDEX = 3\r\nexport const CATEGORY_TAB_INDEX = 4\r\nexport const QTYTYPE_TAB_INDEX = 5\r\nexport const COLOR_TAB_INDEX = 6\r\n\r\nexport const onToolbarPreparing = (e, selectionMode, setSelectionMode, expandMode, setExpandMode ) => {\r\n    var dataGrid = e.component;\r\n    var toolbarItems = e.toolbarOptions.items;\r\n //   toolbarItems[0].visible = false;\r\n    toolbarItems.unshift(\r\n    {\r\n        widget: \"dxButton\",\r\n        name: \"btnMulti\",\r\n        locateInMenu: \"auto\",\r\n        location: \"after\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: selectionMode === 'multiple' ? \"Pilih Satu Baris\" : \"Pilih Sekaligus\" ,\r\n            elementAttr: { \"id\": \"btnMulti\" },\r\n            icon: \"check\", //\"fa fa-check\",\r\n            text: \"Pilih Sekaligus\",\r\n            onClick: (e) => { setSelectionMode(selectionMode === 'multiple' ? \"single\" : \"multiple\" ); } // this.selectionModeChanged.bind(this)\r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        name: \"btnFilter\",\r\n        locateInMenu: \"auto\",\r\n        location: \"after\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: \"Saring Baris\",\r\n            elementAttr: { \"id\": \"btnFilter\" },\r\n            icon: \"filter\", //\"fa fa-filter\",\r\n            text: \"Saring Baris\",\r\n            onClick: function (e) {\r\n                var filter = dataGrid.option(\"filterRow.visible\") === false;\r\n                dataGrid.option(\"filterRow.visible\", filter);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        location: \"after\",\r\n        name: \"btnExpand\",\r\n        locateInMenu: \"auto\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: expandMode ? \"Persempit Baris\" : \"Perluas Baris\", \r\n            elementAttr: { \"id\": \"btnExpand\" },\r\n            icon: expandMode ? \"collapse\" : \"expand\",\r\n            text: expandMode ? \"Persempit Baris\" : \"Perluas Baris\",\r\n            onClick: (e) => {\r\n                setExpandMode(!expandMode);\r\n            } \r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        location: \"after\",\r\n        name: \"btnMultiDelete\",\r\n        locateInMenu: \"auto\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        visible: true,\r\n        options: {\r\n            hint: \"Hapus Sekaligus\", \r\n            elementAttr: { \"id\": \"btnMultiDel\" },\r\n            icon: \"trash\",\r\n            text: \"Hapus Sekaligus\",\r\n            onClick: (e) => {\r\n              //  setExpandMode(!expandMode);\r\n            } \r\n        }\r\n    }\r\n    );\r\n};\r\n\r\nexport const changeStateSelectionChange =  (e) => {\r\n    console.log(e);\r\n}\r\n\r\nexport const onContentReady = (e, isLoad) => {\r\n    if (isLoad) { e.component.beginCustomLoading(); } \r\n    else{ e.component.endCustomLoading(); }\r\n    var scrollable = e.component.getScrollable();  \r\n    scrollable.scrollTo(scrollable.scrollHeight()); \r\n}\r\n\r\nexport const onInitNewRow = (e) => {\r\n    e.data.number = e.component.option('dataSource').length + 1;\r\n}  \r\n\r\nexport const onRowInserted = (e, tab, image) => dispatch => {\r\n    if(image){ e.data.image = image; }\r\n    e.data.code = e.data.number;\r\n    dispatch(storeData(tab, e.data));\r\n}\r\n\r\nexport const onRowUpdated = (e, tab, image) => dispatch => {\r\n    dispatch(updateData(tab, e.data, image));\r\n}\r\n\r\nexport const onRowRemoved = (e, tab, hasImage) => dispatch => {\r\n    let data = {};\r\n    const selectedRow = e.component.getSelectedRowsData();\r\n    if(selectedRow.length > 0) { \r\n        data.ids = selectedRow.map(el => el._id)\r\n       if (hasImage) data.imgs = selectedRow.map(el => el.image);\r\n    }\r\n     else if(e.data) {\r\n         data.ids = []; data.imgs = [];\r\n         data.ids.push(e.data._id)\r\n       if(hasImage) data.imgs.push(e.data.image);\r\n    }\r\n    dispatch(deleteData(data, tab));\r\n}","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftNoteSales.js",["289","290","291","292","293","294"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport TextBox from 'devextreme-react/text-box';\r\n\r\n\r\nfunction LeftNoteSales() {\r\n    return (\r\n        <>\r\n            <Card className={'mt-2 p-4 note-sales-card'}>\r\n                <TextBox stylingMode={'outlined'} placeholder=\"Note.\"/>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftNoteSales, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftItemSales.js",["295","296","297","298","299","300","301","302"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';   \r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport LeftItemCellCustom from './LeftItemCellCustom';\r\nimport {getData} from '../../services/actions/dataAction';\r\nimport {QTYTYPE_TAB_INDEX}  from '../data/ConfigGrids';\r\n\r\nfunction LeftItemSales() {\r\n\r\n    const itemSource = useSelector(s => s.sales.dataItems);\r\n    const qtyDS = useSelector(s => s.data.dataQtytype);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getData(QTYTYPE_TAB_INDEX))    \r\n    \r\n    }, [])\r\n\r\n    const customCellQty = (e) => {\r\n        if(qtyDS){\r\n            let filtered = qtyDS.filter(v => v._id === e.data.qtytype );\r\n            if(filtered.length === 0) {return e.data.qty}\r\n            return(\r\n                <div>\r\n                    <div> {e.data.qty} </div>\r\n                   <div> {filtered[0].name} </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return e.data.qty\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Card className={'mt-2 p-4 item-sales-card'}>\r\n            <DataGrid\r\n                 //   ref={vref}\r\n                    id={'gridItemSales'}\r\n                    dataSource= { itemSource }\r\n                    columnAutoWidth={true}\r\n                    height= {\"100%\"}\r\n                    width= {\"100%\"}\r\n                    noDataText={'No Data !'}\r\n                    showBorders={false}\r\n                    showColumnLines= {false}\r\n                    showRowLines={true}\r\n                    rowAlternationEnabled={false}\r\n                    allowColumnResizing={true}\r\n                    onCellPrepared = { (e) => {  if(e.rowType === 'header' || e.rowType === 'data'){ e.cellElement.style.textAlign = 'center' } } }\r\n                    // onSelectionChanged= { (e) =>{} }  \r\n                    // onInitNewRow={ (e) => {  }}\r\n                    // onRowInserted = { (e) =>{}}\r\n                    // onRowUpdated = { (e) => { } }\r\n                    // onRowRemoving = { (e) => {  }}\r\n                > \r\n                <Editing mode=\"cell\" \r\n                    allowUpdating={true} \r\n                    allowAdding={false} \r\n                    allowDeleting={true} \r\n                    texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }}\r\n                />\r\n\r\n                <GroupPanel visible={false} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n                {/* <Grouping autoExpandAll={expandMode} /> */}\r\n                <SearchPanel visible={false} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n                <Selection mode={'single'} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n                <ColumnFixing enabled={true} />  \r\n                <Column dataField=\"number\" caption=\"No.\" width={50} visible={true}  cssClass=\"row-vertical-align\" allowEditing={false}/>\r\n                <Column dataField=\"name\" caption=\"Items\" visible={true}  cssClass=\"row-vertical-align\" allowEditing={false} cellRender={LeftItemCellCustom}/>\r\n                <Column dataField=\"price\" caption=\"Price\" visible={true}  cssClass=\"row-vertical-align\" allowEditing={false} />\r\n                <Column dataField=\"qty\"\r\n                    caption=\"Qty\" \r\n                    dataType='number' \r\n                    visible={true} \r\n                    cssClass=\"row-vertical-align\" \r\n                    allowEditing={true} \r\n                    editorOptions={{'showSpinButtons':true}} \r\n                    cellRender={customCellQty}/>\r\n                <Column dataField=\"disc\" caption=\"Discount\" visible={true}  cssClass=\"row-vertical-align\" allowEditing={true} calculateDisplayValue={(e)=>{ return e.disc === 0 ? '' : e.disc  }  } />\r\n                <Column dataField=\"subtotal\" caption=\"Sub Total\" dataType='number'  visible={true}  cssClass=\"row-vertical-align\" allowEditing={false}/>\r\n\r\n            </DataGrid>  \r\n\r\n          </Card>  \r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftItemSales, areEqual)\r\n\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftScanSales.js",["303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport { TextBox, Button as TextBoxButton } from 'devextreme-react/text-box';\r\nimport DropDownBox from 'devextreme-react/drop-down-box';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, Paging, Lookup } from 'devextreme-react/data-grid';\r\nimport SelectBox from 'devextreme-react/select-box';\r\nimport { getData, getProductSupport } from '../../services/actions/dataAction';\r\nimport { PRODUCT_TAB_INDEX } from '../data/ConfigGrids';\r\nimport { Autocomplete, DropDownOptions } from 'devextreme-react/autocomplete';\r\n\r\nfunction LeftScanSales() {\r\n    const productDS = useSelector(s => s.data.dataProduct);\r\n    const [brandDS, setBrandDS] = useState(null);\r\n    const [categoryDS, setCategoryDS] = useState(null);\r\n    const [qtyDS, setQtyDS]= useState(null);\r\n    const [gridBoxValue, setGridBoxValue] = useState('');\r\n    const [isGridOpened, setIsGridOpened] = useState(false);\r\n    debugger;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n       dispatch(getData(PRODUCT_TAB_INDEX)); \r\n        getProductSupport().then((res) => {\r\n            if(res){\r\n                setBrandDS(res.brand.data);\r\n                setCategoryDS(res.category.data);\r\n                setQtyDS(res.qtytype.data);\r\n            }\r\n        })\r\n        \r\n    }, []);\r\n\r\n    const gridSelectionChange = (e) => {\r\n        debugger; \r\n        setGridBoxValue(e.selectedRowKeys);\r\n            setIsGridOpened(false)\r\n    }\r\n\r\n    const gridDisplayExpr = (d) => {\r\n        debugger;\r\n        if (d) { return d.name; }\r\n        else{return '';}\r\n        \r\n    }\r\n\r\n    const onGridBoxOpened = (e) => {\r\n        if(e.name === 'opened') {\r\n            debugger;\r\n            setIsGridOpened(e.value);\r\n        }\r\n    }\r\n\r\n    const syncDataGridSelection = (e) => {\r\n        debugger;\r\n          setGridBoxValue(e.value)\r\n      }\r\n\r\n\r\n\r\n    const dataGridRender = (e) => {\r\n        return (\r\n          <DataGrid\r\n            dataSource={productDS}\r\n            hoverStateEnabled={true}\r\n        //    selectedRowKeys={gridBoxValue}\r\n         //   onSelectionChanged={gridSelectionChange}\r\n            height=\"100%\">\r\n            <Selection mode=\"single\" />\r\n            <Scrolling mode=\"virtual\" />\r\n            <Paging enabled={true} pageSize={10} />\r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true} allowEditing={false}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"brand\" caption=\"MERK\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                <Lookup dataSource={brandDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"sprice\" caption=\"JUAL\" dataType=\"number\" format={{type:\"fixedPoint\", precision:2}} cssClass=\"row-vertical-align\" /> \r\n            <Column dataField=\"stock\" caption=\"STOCK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"qtytype\" caption=\"SATUAN\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={qtyDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"category\" caption=\"KATEGORI\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={categoryDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"color\" caption=\"WARNA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"image\" caption=\"GAMBAR\" visible={true}  cssClass=\"row-vertical-align\" />\r\n          </DataGrid>\r\n        );\r\n      }\r\n\r\n      const itemRender = (data) =>{\r\n          return (\r\n              <div className={'custom-item-scan'}>\r\n                  <div className={'name'}> {data.name} </div>\r\n                  <div className={'stock'}> {data.stock} </div>\r\n                  <div className={'image'}> {data.image}</div>\r\n               </div>   \r\n          )\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <Card className={'mt-2 p-4 scan-sales-card'}>\r\n                <SelectBox\r\n                     value={gridBoxValue}\r\n                    // opened={false}\r\n                     valueExpr=\"_id\"\r\n                     deferRendering={false}\r\n                     displayExpr=\"name\"\r\n                     placeholder=\"Select a value...\"\r\n                     showClearButton={true}\r\n                     dataSource={productDS}\r\n                     searchEnabled={true}\r\n                     searchMode={'contains'}\r\n                     searchExpr={['_id', 'name']}\r\n                     searchTimeout={200}\r\n                     minSearchLength={0}\r\n                     showDataBeforeSearch={true} \r\n                     itemRender={itemRender}                  \r\n                     onValueChanged={(e) => { syncDataGridSelection(e) } }\r\n                 //   onOptionChanged={(e) => { onGridBoxOpened(e) }}\r\n            //todo\r\n                >\r\n                </SelectBox>\r\n            </Card> \r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftScanSales, areEqual)\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightAccSaleInfo.js",["321","322","323"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DateBox, SelectBox } from 'devextreme-react';\r\nimport { getData } from '../../services/actions/dataAction';\r\nimport { CUSTOMER_TAB_INDEX, tab } from '../data/ConfigGrids';\r\n\r\nfunction RightAccSaleInfo({data}) {\r\n\r\n    const [invDate, setInvDate] = useState(new Date());\r\n    const customerDS = useSelector(s => s.data.dataCustomer); \r\n    const user = useSelector(s => s.auth.user);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {   \r\n        dispatch(getData(CUSTOMER_TAB_INDEX));\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row className={'mb-2'}>\r\n                <Col>Invoice</Col>\r\n                <Col>{data.invno}</Col>\r\n            </Row>\r\n            <Row className={'mb-2'}>\r\n                <Col>Date</Col>\r\n                <Col>\r\n                    <DateBox defaultValue={invDate} disabled={true} type=\"date\" />\r\n                </Col>\r\n            </Row>\r\n            <Row className={'mb-2'}>\r\n                <Col>Cashier</Col>\r\n                <Col>{user.name}</Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>Customer</Col>\r\n                <Col>\r\n                <SelectBox \r\n                    dataSource={customerDS}\r\n                    displayExpr={'name'}\r\n                    valueExpr={'_id'}\r\n                    searchEnabled={true}\r\n                    searchMode={'contains'}\r\n                    searchExpr={'name'}\r\n                    searchTimeout={200}\r\n                    minSearchLength={0}\r\n                    showDataBeforeSearch={true} \r\n                    defaultValue={data.customer}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(RightAccSaleInfo, areEqual)\r\n\r\n","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\RightAccPaymentInfo.js",["324","325","326","327","328"],"import React, {useState} from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport {Button, NumberBox} from 'devextreme-react';\r\nimport {formatRupiah} from '../../services/helper/IDRFormat';\r\n\r\nfunction RightAccPaymentInfo({data}) {\r\n    const [addcharge, setAddCharge] = useState(0); \r\n    const [addDisc, setAddDisc] = useState(0); \r\n    \r\n    const calculateTotal = () => {\r\n        return(\r\n            <div>{Number(data.subtotal - data.disc + addcharge - addDisc) }</div>\r\n        )\r\n    }\r\n\r\n    const CalculateDueChange = () => {\r\n        return(\r\n            <div>{Number(data.grantotal - data.cash + addcharge - addDisc) }</div>\r\n        )\r\n    }\r\n\r\n    const onAddPayment = () =>{\r\n\r\n    }\r\n\r\n    const onCancelPayment = () => {\r\n\r\n    }\r\n\r\n    const onProcessPayment = () => {\r\n    }\r\n    return (\r\n        <>\r\n            <Row className='mb-2'> <Col>SubTotal</Col> <Col className=\"d-flex justify-content-end\">{ formatRupiah(data.subtotal)}</Col> </Row>  \r\n            <div className={'line-h-payment-info'}></div>\r\n           <Row className='mb-2'> <Col>Discount</Col> <Col className=\"d-flex justify-content-end\" >{formatRupiah(data.disc)}</Col> </Row> \r\n            <div className={'line-h-payment-info'}></div> \r\n             <Row className='mb-2'> <Col>Additional Charge</Col> <Col className=\"d-flex justify-content-end\">{formatRupiah(data.addcharge)}</Col> </Row>  \r\n            <div className={'line-h-payment-info'}></div>\r\n            <Row className='mb-2'> <Col>Additional Discount</Col> <Col className=\"d-flex justify-content-end\">{formatRupiah(data.adddisc)}</Col> </Row>  \r\n            <div className={'line-h-payment-info'}></div>\r\n            <Row className='mb-2'> <Col className=\"h5\">TOTAL</Col> <Col  className=\"d-flex justify-content-end\">{formatRupiah(data.grandtotal)}</Col></Row> \r\n            <Row className=\"mb-2\">\r\n                <div className={'cash-due-box'}>\r\n                    <div className={'cash-box'}>\r\n                        <div className={'cash-label'}><strong>Cash (Rp.)</strong></div>\r\n                        <div className={'cash-value'}>    \r\n                            <NumberBox\r\n                                id={'eCashValue'}\r\n                                defaultValue={data.cash}\r\n                                min={0}\r\n                                height={'10vh'}\r\n                                style={{'fontSize':'2rem'}}\r\n                                showSpinButtons={true}\r\n                                format=\"#,##0\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'due-box'}>\r\n                        <div className={'due-label mb-2'}><strong>Due (Rp.)</strong></div>\r\n                        <div className={'due-value'}>{ formatRupiah(data.changedue, false) }</div>\r\n                    </div>   \r\n                    <div className={'middle-line'}></div>   \r\n                </div>\r\n            </Row>\r\n            <Row className=\"mb-4\">\r\n                <Col>\r\n                 <div className={'add-payment-label'}>Transfer</div>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <div className={'add-payment-value'}>\r\n                        <NumberBox\r\n                            id={'eAddPayment'}\r\n                            defaultValue={data.transfer}\r\n                            min={10}\r\n                            max={20}\r\n                            showSpinButtons={true}\r\n                            format=\"Rp #,##0\"\r\n                        />\r\n                    </div>\r\n                </Col>\r\n          \r\n            </Row>\r\n     \r\n            <Row className=\"mb-2\">\r\n            <Col className=\"d-flex justify-content-end\">\r\n        \r\n           \r\n            </Col>\r\n            <Col className=\"d-flex justify-content-end\">\r\n            <div className='container-btn-cancel-payment'>\r\n                <Button\r\n                 id={'btnCancelPayment'}\r\n                 icon={'close'}\r\n                 type={'danger'}\r\n                 text={'Cancel'}\r\n                 onClick={() => { onCancelPayment() } }\r\n                 height={'50'}\r\n                 style={{'borderRadius':'10px', 'marginRight':'5px'}}\r\n                />\r\n            </div>\r\n            <div className='container-btn-process-payment '>\r\n                <Button\r\n                 id={'btnProcessPayment'}\r\n                 icon={'chevrondoubleright'}\r\n                 type={'success'}\r\n                 text={'Process'}\r\n                 onClick={() => {onProcessPayment()}}\r\n                 height={'100%'}\r\n                 style={{'borderRadius':'10px'}}\r\n                />\r\n            </div> \r\n            </Col>\r\n    \r\n        \r\n            </Row>\r\n   \r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(RightAccPaymentInfo, areEqual)","C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\component\\sales\\LeftItemCellCustom.js",[],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\idrFormat.js",["329","330","331","332"],"C:\\Users\\Ihsan_pc\\Documents\\vicky\\mern-api\\frontend\\src\\services\\helper\\IDRFormat.js",["333"],"export const formatRupiah = (angka, prefix) => {\r\n    if (typeof angka === 'number') {\r\n        angka = angka.toString();\r\n    }\r\n    let separator = null;\r\n    let result = angka;\r\n\tlet number_string = angka.replace(/[^,\\d]/g, '').toString();\r\n\tlet split   \t\t= number_string.split(',');\r\n\tlet sisa     \t\t= split[0].length % 3;\r\n\tlet rupiah     \t\t= split[0].substr(0, sisa);\r\n\tlet ribuan     \t\t= split[0].substr(sisa).match(/\\d{3}/gi);\r\n\r\n\t// tambahkan titik jika yang di input sudah menjadi angka ribuan\r\n\tif(ribuan){\r\n\t\tseparator = sisa ? ',' : '';\r\n\t\trupiah += separator + ribuan.join(',');\r\n\t}\r\n\r\n\trupiah = split[1] != undefined ? rupiah + ',' + split[1] : rupiah;\r\n\r\n    if (prefix === undefined) result = 'Rp. ' + rupiah\r\n    else if( prefix === false) result = rupiah\r\n    else result = 'Rp. ' + rupiah;\r\n\treturn result;\r\n}",{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":12,"column":1,"nodeType":"340","endLine":46,"endColumn":2},{"ruleId":"338","severity":1,"message":"339","line":22,"column":3,"nodeType":"340","endLine":67,"endColumn":4},{"ruleId":"338","severity":1,"message":"339","line":24,"column":1,"nodeType":"340","endLine":149,"endColumn":4},{"ruleId":"338","severity":1,"message":"339","line":14,"column":1,"nodeType":"340","endLine":24,"endColumn":4},{"ruleId":"338","severity":1,"message":"341","line":13,"column":1,"nodeType":"340","endLine":57,"endColumn":3},{"ruleId":"342","severity":1,"message":"343","line":46,"column":9,"nodeType":"344","messageId":"345","endLine":46,"endColumn":32},{"ruleId":"342","severity":1,"message":"346","line":1,"column":34,"nodeType":"344","messageId":"345","endLine":1,"endColumn":43},{"ruleId":"342","severity":1,"message":"347","line":2,"column":9,"nodeType":"344","messageId":"345","endLine":2,"endColumn":20},{"ruleId":"342","severity":1,"message":"348","line":3,"column":8,"nodeType":"344","messageId":"345","endLine":3,"endColumn":19},{"ruleId":"342","severity":1,"message":"349","line":35,"column":11,"nodeType":"344","messageId":"345","endLine":35,"endColumn":24},{"ruleId":"342","severity":1,"message":"350","line":3,"column":28,"nodeType":"344","messageId":"345","endLine":3,"endColumn":36},{"ruleId":"342","severity":1,"message":"351","line":3,"column":98,"nodeType":"344","messageId":"345","endLine":3,"endColumn":107},{"ruleId":"342","severity":1,"message":"352","line":3,"column":109,"nodeType":"344","messageId":"345","endLine":3,"endColumn":118},{"ruleId":"342","severity":1,"message":"353","line":3,"column":129,"nodeType":"344","messageId":"345","endLine":3,"endColumn":134},{"ruleId":"342","severity":1,"message":"354","line":3,"column":136,"nodeType":"344","messageId":"345","endLine":3,"endColumn":144},{"ruleId":"342","severity":1,"message":"355","line":20,"column":11,"nodeType":"344","messageId":"345","endLine":20,"endColumn":15},{"ruleId":"356","severity":1,"message":"357","line":38,"column":13,"nodeType":"358","endLine":38,"endColumn":98},{"ruleId":"342","severity":1,"message":"350","line":3,"column":28,"nodeType":"344","messageId":"345","endLine":3,"endColumn":36},{"ruleId":"342","severity":1,"message":"351","line":3,"column":98,"nodeType":"344","messageId":"345","endLine":3,"endColumn":107},{"ruleId":"342","severity":1,"message":"352","line":3,"column":109,"nodeType":"344","messageId":"345","endLine":3,"endColumn":118},{"ruleId":"342","severity":1,"message":"353","line":3,"column":129,"nodeType":"344","messageId":"345","endLine":3,"endColumn":134},{"ruleId":"342","severity":1,"message":"354","line":3,"column":136,"nodeType":"344","messageId":"345","endLine":3,"endColumn":144},{"ruleId":"342","severity":1,"message":"359","line":3,"column":152,"nodeType":"344","messageId":"345","endLine":3,"endColumn":158},{"ruleId":"342","severity":1,"message":"360","line":12,"column":11,"nodeType":"344","messageId":"345","endLine":12,"endColumn":17},{"ruleId":"342","severity":1,"message":"351","line":3,"column":87,"nodeType":"344","messageId":"345","endLine":3,"endColumn":96},{"ruleId":"342","severity":1,"message":"352","line":3,"column":98,"nodeType":"344","messageId":"345","endLine":3,"endColumn":107},{"ruleId":"342","severity":1,"message":"360","line":12,"column":11,"nodeType":"344","messageId":"345","endLine":12,"endColumn":17},{"ruleId":"342","severity":1,"message":"350","line":3,"column":28,"nodeType":"344","messageId":"345","endLine":3,"endColumn":36},{"ruleId":"342","severity":1,"message":"351","line":3,"column":98,"nodeType":"344","messageId":"345","endLine":3,"endColumn":107},{"ruleId":"342","severity":1,"message":"352","line":3,"column":109,"nodeType":"344","messageId":"345","endLine":3,"endColumn":118},{"ruleId":"342","severity":1,"message":"353","line":3,"column":129,"nodeType":"344","messageId":"345","endLine":3,"endColumn":134},{"ruleId":"342","severity":1,"message":"354","line":3,"column":136,"nodeType":"344","messageId":"345","endLine":3,"endColumn":144},{"ruleId":"342","severity":1,"message":"359","line":3,"column":152,"nodeType":"344","messageId":"345","endLine":3,"endColumn":158},{"ruleId":"361","severity":1,"message":"362","line":32,"column":17,"nodeType":"363","endLine":32,"endColumn":39},{"ruleId":"361","severity":1,"message":"362","line":33,"column":17,"nodeType":"363","endLine":33,"endColumn":33},{"ruleId":"361","severity":1,"message":"362","line":34,"column":17,"nodeType":"363","endLine":34,"endColumn":32},{"ruleId":"342","severity":1,"message":"351","line":3,"column":87,"nodeType":"344","messageId":"345","endLine":3,"endColumn":96},{"ruleId":"342","severity":1,"message":"352","line":3,"column":98,"nodeType":"344","messageId":"345","endLine":3,"endColumn":107},{"ruleId":"342","severity":1,"message":"353","line":3,"column":118,"nodeType":"344","messageId":"345","endLine":3,"endColumn":123},{"ruleId":"342","severity":1,"message":"354","line":3,"column":125,"nodeType":"344","messageId":"345","endLine":3,"endColumn":133},{"ruleId":"342","severity":1,"message":"360","line":12,"column":11,"nodeType":"344","messageId":"345","endLine":12,"endColumn":17},{"ruleId":"342","severity":1,"message":"351","line":3,"column":87,"nodeType":"344","messageId":"345","endLine":3,"endColumn":96},{"ruleId":"342","severity":1,"message":"352","line":3,"column":98,"nodeType":"344","messageId":"345","endLine":3,"endColumn":107},{"ruleId":"342","severity":1,"message":"364","line":8,"column":27,"nodeType":"344","messageId":"345","endLine":8,"endColumn":43},{"ruleId":"342","severity":1,"message":"365","line":9,"column":24,"nodeType":"344","messageId":"345","endLine":9,"endColumn":37},{"ruleId":"342","severity":1,"message":"366","line":2,"column":9,"nodeType":"344","messageId":"345","endLine":2,"endColumn":12},{"ruleId":"342","severity":1,"message":"367","line":2,"column":14,"nodeType":"344","messageId":"345","endLine":2,"endColumn":17},{"ruleId":"342","severity":1,"message":"368","line":2,"column":19,"nodeType":"344","messageId":"345","endLine":2,"endColumn":23},{"ruleId":"342","severity":1,"message":"346","line":1,"column":26,"nodeType":"344","messageId":"345","endLine":1,"endColumn":35},{"ruleId":"342","severity":1,"message":"369","line":2,"column":22,"nodeType":"344","messageId":"345","endLine":2,"endColumn":33},{"ruleId":"342","severity":1,"message":"366","line":3,"column":9,"nodeType":"344","messageId":"345","endLine":3,"endColumn":12},{"ruleId":"342","severity":1,"message":"367","line":3,"column":14,"nodeType":"344","messageId":"345","endLine":3,"endColumn":17},{"ruleId":"342","severity":1,"message":"370","line":11,"column":12,"nodeType":"344","messageId":"345","endLine":11,"endColumn":20},{"ruleId":"342","severity":1,"message":"371","line":11,"column":22,"nodeType":"344","messageId":"345","endLine":11,"endColumn":33},{"ruleId":"342","severity":1,"message":"372","line":27,"column":11,"nodeType":"344","messageId":"345","endLine":27,"endColumn":27},{"ruleId":"342","severity":1,"message":"373","line":1,"column":8,"nodeType":"344","messageId":"345","endLine":1,"endColumn":13},{"ruleId":"342","severity":1,"message":"374","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":16},{"ruleId":"342","severity":1,"message":"359","line":2,"column":18,"nodeType":"344","messageId":"345","endLine":2,"endColumn":24},{"ruleId":"342","severity":1,"message":"375","line":3,"column":8,"nodeType":"344","messageId":"345","endLine":3,"endColumn":15},{"ruleId":"342","severity":1,"message":"376","line":1,"column":16,"nodeType":"344","messageId":"345","endLine":1,"endColumn":24},{"ruleId":"342","severity":1,"message":"346","line":1,"column":26,"nodeType":"344","messageId":"345","endLine":1,"endColumn":35},{"ruleId":"342","severity":1,"message":"347","line":2,"column":9,"nodeType":"344","messageId":"345","endLine":2,"endColumn":20},{"ruleId":"342","severity":1,"message":"369","line":2,"column":22,"nodeType":"344","messageId":"345","endLine":2,"endColumn":33},{"ruleId":"342","severity":1,"message":"366","line":3,"column":9,"nodeType":"344","messageId":"345","endLine":3,"endColumn":12},{"ruleId":"342","severity":1,"message":"367","line":3,"column":14,"nodeType":"344","messageId":"345","endLine":3,"endColumn":17},{"ruleId":"342","severity":1,"message":"376","line":1,"column":16,"nodeType":"344","messageId":"345","endLine":1,"endColumn":24},{"ruleId":"342","severity":1,"message":"366","line":3,"column":9,"nodeType":"344","messageId":"345","endLine":3,"endColumn":12},{"ruleId":"342","severity":1,"message":"367","line":3,"column":14,"nodeType":"344","messageId":"345","endLine":3,"endColumn":17},{"ruleId":"342","severity":1,"message":"377","line":4,"column":38,"nodeType":"344","messageId":"345","endLine":4,"endColumn":46},{"ruleId":"342","severity":1,"message":"351","line":4,"column":87,"nodeType":"344","messageId":"345","endLine":4,"endColumn":96},{"ruleId":"342","severity":1,"message":"352","line":4,"column":98,"nodeType":"344","messageId":"345","endLine":4,"endColumn":107},{"ruleId":"342","severity":1,"message":"378","line":4,"column":118,"nodeType":"344","messageId":"345","endLine":4,"endColumn":122},{"ruleId":"379","severity":1,"message":"380","line":17,"column":8,"nodeType":"381","endLine":17,"endColumn":10,"suggestions":"382"},{"ruleId":"342","severity":1,"message":"366","line":3,"column":9,"nodeType":"344","messageId":"345","endLine":3,"endColumn":12},{"ruleId":"342","severity":1,"message":"367","line":3,"column":14,"nodeType":"344","messageId":"345","endLine":3,"endColumn":17},{"ruleId":"342","severity":1,"message":"383","line":4,"column":10,"nodeType":"344","messageId":"345","endLine":4,"endColumn":17},{"ruleId":"342","severity":1,"message":"384","line":4,"column":29,"nodeType":"344","messageId":"345","endLine":4,"endColumn":42},{"ruleId":"342","severity":1,"message":"385","line":5,"column":8,"nodeType":"344","messageId":"345","endLine":5,"endColumn":19},{"ruleId":"342","severity":1,"message":"350","line":6,"column":28,"nodeType":"344","messageId":"345","endLine":6,"endColumn":36},{"ruleId":"342","severity":1,"message":"377","line":6,"column":49,"nodeType":"344","messageId":"345","endLine":6,"endColumn":57},{"ruleId":"342","severity":1,"message":"386","line":6,"column":59,"nodeType":"344","messageId":"345","endLine":6,"endColumn":69},{"ruleId":"342","severity":1,"message":"387","line":6,"column":71,"nodeType":"344","messageId":"345","endLine":6,"endColumn":83},{"ruleId":"342","severity":1,"message":"388","line":6,"column":85,"nodeType":"344","messageId":"345","endLine":6,"endColumn":96},{"ruleId":"342","severity":1,"message":"389","line":10,"column":10,"nodeType":"344","messageId":"345","endLine":10,"endColumn":22},{"ruleId":"342","severity":1,"message":"390","line":10,"column":24,"nodeType":"344","messageId":"345","endLine":10,"endColumn":39},{"ruleId":"342","severity":1,"message":"391","line":18,"column":12,"nodeType":"344","messageId":"345","endLine":18,"endColumn":24},{"ruleId":"379","severity":1,"message":"380","line":33,"column":8,"nodeType":"381","endLine":33,"endColumn":10,"suggestions":"392"},{"ruleId":"342","severity":1,"message":"393","line":35,"column":11,"nodeType":"344","messageId":"345","endLine":35,"endColumn":30},{"ruleId":"342","severity":1,"message":"394","line":41,"column":11,"nodeType":"344","messageId":"345","endLine":41,"endColumn":26},{"ruleId":"342","severity":1,"message":"395","line":48,"column":11,"nodeType":"344","messageId":"345","endLine":48,"endColumn":26},{"ruleId":"342","severity":1,"message":"396","line":62,"column":11,"nodeType":"344","messageId":"345","endLine":62,"endColumn":25},{"ruleId":"342","severity":1,"message":"397","line":6,"column":30,"nodeType":"344","messageId":"345","endLine":6,"endColumn":33},{"ruleId":"342","severity":1,"message":"398","line":10,"column":21,"nodeType":"344","messageId":"345","endLine":10,"endColumn":31},{"ruleId":"379","severity":1,"message":"380","line":16,"column":8,"nodeType":"381","endLine":16,"endColumn":10,"suggestions":"399"},{"ruleId":"342","severity":1,"message":"400","line":7,"column":23,"nodeType":"344","messageId":"345","endLine":7,"endColumn":35},{"ruleId":"342","severity":1,"message":"401","line":8,"column":21,"nodeType":"344","messageId":"345","endLine":8,"endColumn":31},{"ruleId":"342","severity":1,"message":"402","line":10,"column":11,"nodeType":"344","messageId":"345","endLine":10,"endColumn":25},{"ruleId":"342","severity":1,"message":"403","line":16,"column":11,"nodeType":"344","messageId":"345","endLine":16,"endColumn":29},{"ruleId":"342","severity":1,"message":"404","line":22,"column":11,"nodeType":"344","messageId":"345","endLine":22,"endColumn":23},{"ruleId":"405","severity":2,"message":"406","line":11,"column":3,"nodeType":"344","messageId":"407","endLine":11,"endColumn":12},{"ruleId":"405","severity":2,"message":"406","line":12,"column":13,"nodeType":"344","messageId":"407","endLine":12,"endColumn":22},{"ruleId":"408","severity":1,"message":"409","line":15,"column":20,"nodeType":"410","messageId":"411","endLine":15,"endColumn":22},{"ruleId":"408","severity":1,"message":"412","line":16,"column":16,"nodeType":"410","messageId":"411","endLine":16,"endColumn":18},{"ruleId":"408","severity":1,"message":"409","line":19,"column":20,"nodeType":"410","messageId":"411","endLine":19,"endColumn":22},"no-native-reassign",["413"],"no-negated-in-lhs",["414"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'handleClickShowPassword' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'ToolsAction' is defined but never used.","'onActionClick' is assigned a value but never used.","'FormItem' is defined but never used.","'Scrolling' is defined but never used.","'LoadPanel' is defined but never used.","'Popup' is defined but never used.","'Position' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Lookup' is defined but never used.","'isLoad' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setSelectionMode' is assigned a value but never used.","'setExpandMode' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'useDispatch' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'selectionChanged' is assigned a value but never used.","'React' is defined but never used.","'Column' is defined but never used.","'isEmpty' is defined but never used.","'useState' is defined but never used.","'Grouping' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["415"],"'TextBox' is defined but never used.","'TextBoxButton' is defined but never used.","'DropDownBox' is defined but never used.","'GroupPanel' is defined but never used.","'ColumnFixing' is defined but never used.","'SearchPanel' is defined but never used.","'Autocomplete' is defined but never used.","'DropDownOptions' is defined but never used.","'isGridOpened' is assigned a value but never used.",["416"],"'gridSelectionChange' is assigned a value but never used.","'gridDisplayExpr' is assigned a value but never used.","'onGridBoxOpened' is assigned a value but never used.","'dataGridRender' is assigned a value but never used.","'tab' is defined but never used.","'setInvDate' is assigned a value but never used.",["417"],"'setAddCharge' is assigned a value but never used.","'setAddDisc' is assigned a value but never used.","'calculateTotal' is assigned a value but never used.","'CalculateDueChange' is assigned a value but never used.","'onAddPayment' is assigned a value but never used.","no-undef","'separator' is not defined.","undef","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"418","fix":"420"},{"desc":"418","fix":"421"},"Update the dependencies array to be: [dispatch]",{"range":"422","text":"423"},{"range":"424","text":"423"},{"range":"425","text":"423"},[764,766],"[dispatch]",[1471,1473],[665,667]]