[{"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\index.js":"1","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\App.js":"2","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\store.js":"4","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\routes\\rauth.js":"5","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\authReducer.js":"6","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\dataReducer.js":"7","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\nav\\PrivateRoute.js":"8","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\admin\\AdminLayout.js":"9","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\actions\\authAction.js":"10","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\_lib\\_spinner\\Spinner.js":"11","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\tableReducer.js":"12","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\salesReducer.js":"13","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\routes\\rpage.js":"14","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\dataType.js":"15","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\tableType.js":"16","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\config.js":"17","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\authType.js":"18","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\helper\\isEmpty.js":"19","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\helper\\setAuthToken.js":"20","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\auth\\Auth.js":"21","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\salesType.js":"22","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\admin\\Nav.js":"23","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\report\\Report.js":"24","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\home\\Home.js":"25","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\purchase\\Purchase.js":"26","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\return\\Return.js":"27","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\setting\\Setting.js":"28","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\Data.js":"29","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\auth\\StyledC.js":"30","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\Sales.js":"31","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\ToolsAction.js":"32","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\template\\Header.js":"33","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridBrand.js":"34","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridQty.js":"35","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridCategory.js":"36","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridCustomer.js":"37","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridSupplier.js":"38","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\RightSecSales.js":"39","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftSecSales.js":"40","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\actions\\dataAction.js":"41","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridProduct.js":"42","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\ConfigGrids.js":"43","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\RightAccSaleInfo.js":"44","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftScanSales.js":"45","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftItemSales.js":"46","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\RightAccPaymentInfo.js":"47","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftNoteSales.js":"48","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftItemCellCustom.js":"49"},{"size":716,"mtime":1618983739000,"results":"50","hashOfConfig":"51"},{"size":2210,"mtime":1618983738930,"results":"52","hashOfConfig":"51"},{"size":5086,"mtime":1618983739007,"results":"53","hashOfConfig":"51"},{"size":571,"mtime":1618985945070,"results":"54","hashOfConfig":"51"},{"size":242,"mtime":1618983739004,"results":"55","hashOfConfig":"51"},{"size":1287,"mtime":1618983739022,"results":"56","hashOfConfig":"51"},{"size":1635,"mtime":1618983739023,"results":"57","hashOfConfig":"51"},{"size":552,"mtime":1618983738971,"results":"58","hashOfConfig":"51"},{"size":1229,"mtime":1618983738942,"results":"59","hashOfConfig":"51"},{"size":5652,"mtime":1618983739009,"results":"60","hashOfConfig":"51"},{"size":808,"mtime":1618983738935,"results":"61","hashOfConfig":"51"},{"size":4521,"mtime":1618983739024,"results":"62","hashOfConfig":"51"},{"size":990,"mtime":1619157081506,"results":"63","hashOfConfig":"51"},{"size":1319,"mtime":1618983739006,"results":"64","hashOfConfig":"51"},{"size":391,"mtime":1618983739028,"results":"65","hashOfConfig":"51"},{"size":430,"mtime":1618983739029,"results":"66","hashOfConfig":"51"},{"size":3394,"mtime":1618983738993,"results":"67","hashOfConfig":"51"},{"size":216,"mtime":1618983739027,"results":"68","hashOfConfig":"51"},{"size":278,"mtime":1618983739018,"results":"69","hashOfConfig":"51"},{"size":259,"mtime":1618983739019,"results":"70","hashOfConfig":"51"},{"size":3892,"mtime":1618983738945,"results":"71","hashOfConfig":"51"},{"size":43,"mtime":1618985713320,"results":"72","hashOfConfig":"51"},{"size":17182,"mtime":1618983738944,"results":"73","hashOfConfig":"51"},{"size":291,"mtime":1618983738976,"results":"74","hashOfConfig":"51"},{"size":456,"mtime":1618983738969,"results":"75","hashOfConfig":"51"},{"size":298,"mtime":1618983738974,"results":"76","hashOfConfig":"51"},{"size":290,"mtime":1618983738978,"results":"77","hashOfConfig":"51"},{"size":294,"mtime":1618983738990,"results":"78","hashOfConfig":"51"},{"size":3083,"mtime":1618983738955,"results":"79","hashOfConfig":"51"},{"size":3967,"mtime":1618983738950,"results":"80","hashOfConfig":"51"},{"size":901,"mtime":1619161340975,"results":"81","hashOfConfig":"51"},{"size":692,"mtime":1618983738964,"results":"82","hashOfConfig":"51"},{"size":304,"mtime":1618983738992,"results":"83","hashOfConfig":"51"},{"size":3475,"mtime":1618983738956,"results":"84","hashOfConfig":"51"},{"size":3574,"mtime":1618983738961,"results":"85","hashOfConfig":"51"},{"size":3409,"mtime":1618983738957,"results":"86","hashOfConfig":"51"},{"size":5659,"mtime":1618983738958,"results":"87","hashOfConfig":"51"},{"size":5282,"mtime":1618983738962,"results":"88","hashOfConfig":"51"},{"size":1688,"mtime":1619161637453,"results":"89","hashOfConfig":"51"},{"size":523,"mtime":1619145894076,"results":"90","hashOfConfig":"51"},{"size":11343,"mtime":1619145894086,"results":"91","hashOfConfig":"51"},{"size":7804,"mtime":1618983738959,"results":"92","hashOfConfig":"51"},{"size":4203,"mtime":1618983738953,"results":"93","hashOfConfig":"51"},{"size":1951,"mtime":1619149977328,"results":"94","hashOfConfig":"51"},{"size":1237,"mtime":1619145894074,"results":"95","hashOfConfig":"51"},{"size":4347,"mtime":1619145894072,"results":"96","hashOfConfig":"51"},{"size":4035,"mtime":1619161448484,"results":"97","hashOfConfig":"51"},{"size":543,"mtime":1619145894073,"results":"98","hashOfConfig":"51"},{"size":395,"mtime":1619145894070,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1o28870",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"102"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"102"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\index.js",[],["219","220"],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\App.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\store.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\routes\\rauth.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\authReducer.js",["221"],"import { SET_AUTH, ERR_AUTH, TOOGLE_LOADING, STOP_SPNNER, SET_FIRST_LOAD } from '../types/authType';\r\nimport isEmpty from '../helper/isEmpty';\r\n\r\nconst initialState = {\r\n    isAuthenticated : false,\r\n    errAuthMessage:'',\r\n    loading: false,\r\n    firstLoad: true,\r\n    spinner: true,\r\n    user: ''\r\n};\r\nexport default function(state = initialState, action){\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthenticated : !isEmpty(action.payload.user),\r\n                user: { ...action.payload.user },\r\n                spinner: false,\r\n            }\r\n        case ERR_AUTH:\r\n            return {\r\n                ...state, \r\n                isAuthenticated: false,\r\n                errAuthMessage: action.payload,\r\n                spinner: false\r\n            }\r\n        case SET_FIRST_LOAD:\r\n            return{\r\n                ...state,\r\n                firstLoad: action.payload\r\n            }\r\n        case TOOGLE_LOADING: \r\n            return{\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case STOP_SPNNER:\r\n            return {\r\n                ...state,\r\n                spinner: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\dataReducer.js",["222"],"import {  \r\n          CHANGE_TAB,\r\n          GET_PRODUCT,\r\n          GET_SUPPLIER,\r\n          GET_CUSTOMER,\r\n          GET_BRAND,\r\n          GET_CATEGORY,\r\n          GET_QTYTYPE,\r\n          GET_COLOR\r\n          } from \"../types/dataType\";\r\n\r\nconst initialState = {\r\n    tabActive: -1,\r\n    dataProduct : [],\r\n    dataSupplier: [],\r\n    dataCustomer: [],\r\n    dataBrand: [],\r\n    dataCategory: [],\r\n    dataQtytype: [],\r\n    dataColor: []\r\n };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case CHANGE_TAB:\r\n        return {\r\n          ...state,\r\n          tabActive: action.payload.tabActive,\r\n        }\r\n      case GET_PRODUCT:\r\n        return{\r\n          ...state,\r\n          dataProduct: [...action.payload.dataSource ]\r\n        }\r\n      case GET_SUPPLIER:\r\n        return {\r\n          ...state,\r\n          dataSupplier: [...action.payload.dataSource ],\r\n        }\r\n      case GET_CUSTOMER:\r\n        return {\r\n          ...state,\r\n          dataCustomer: [...action.payload.dataSource ],\r\n        }\r\n      case GET_BRAND:\r\n        return {\r\n          ...state,\r\n          dataBrand: [...action.payload.dataSource ],\r\n        }\r\n      case GET_CATEGORY: \r\n        return {\r\n          ...state,\r\n          dataCategory: [...action.payload.dataSource ],\r\n        }\r\n      case GET_QTYTYPE:\r\n          return {\r\n            ...state,\r\n            dataQtytype: [...action.payload.dataSource ],\r\n          }\r\n      case GET_COLOR:\r\n        return {\r\n          ...state,\r\n          dataColor: [...action.payload.dataSource ],\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\nav\\PrivateRoute.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\admin\\AdminLayout.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\actions\\authAction.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\_lib\\_spinner\\Spinner.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\tableReducer.js",["223"],"import { \r\n          TOOGLE_LOADING, LOAD_DATA, SELECT_ALL, \r\n          CHANGE_SORT, CHANGE_PAGE, CHANGE_ROW_PAGE, \r\n          CHANGE_FILTER, ROW_CLICK, RESELECT, UPDATE_FORM } from '../types/tableType';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    originDataSource: [],\r\n    dataSource: [],\r\n    columns: [],\r\n    order: \"asc\",\r\n    orderBy: \"\",\r\n    selected: [],\r\n    selectedAll: false,\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n    valueSearch:'',\r\n    selectTable: false,\r\n    showFilter: true,\r\n    isLoading: false,\r\n    cDataStore: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case LOAD_DATA:\r\n        return {\r\n          ...state, \r\n          columns: {...action.payload.columns },\r\n          originDataSource: {...action.payload.data },\r\n          dataSource: {...action.payload.data },\r\n          selected: []\r\n        }\r\n      case SELECT_ALL:\r\n          if (action.checked) {\r\n              return {\r\n                ...state,\r\n                selected: Object.values(state.dataSource).map(n => n.id),\r\n                selectedAll: !state.selectedAll\r\n              }\r\n          }\r\n          else{\r\n            return {\r\n              ...state,\r\n              selected: [],\r\n              selectedAll: false\r\n            }\r\n        }\r\n      case CHANGE_SORT: \r\n        const orderBy = action.payload;\r\n        let order = \"desc\";\r\n        if (state.orderBy === orderBy && state.order === order) {\r\n          order = \"asc\";\r\n        }\r\n        return{\r\n          ...state,\r\n          order,\r\n          orderBy\r\n        }\r\n      case CHANGE_PAGE: \r\n        return{\r\n          ...state,\r\n          page : action.payload\r\n        }\r\n      case CHANGE_ROW_PAGE:\r\n          return {\r\n            ...state,\r\n            rowsPerPage: action.payload\r\n        }\r\n      case CHANGE_FILTER:\r\n          let filtered = [];\r\n          let cols = [];\r\n\r\n          for(var prop in state.columns){ \r\n            cols.push(state.columns[prop].field);\r\n          }\r\n          if ( Object.values(state.originDataSource).length > 0) {\r\n            filtered = Object.values(state.originDataSource).filter(e => {\r\n              return Object.keys(e).some(s => {\r\n                if (cols.includes(s)) {\r\n                  if(e[s] === undefined || e[s] === null){  return false;  }\r\n                  else if(typeof(e[s]) === 'object'){return e[s].name.toString().toUpperCase().includes(action.payload.toString().toUpperCase()); }\r\n                  else{ return e[s].toString().toUpperCase().includes(action.payload.toString().toUpperCase()); }\r\n                } else {\r\n                  return false;\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            filtered = [];\r\n          }\r\n\r\n        if(state.selectedAll){\r\n            return{\r\n              ...state,\r\n              valueSearch: action.payload,\r\n              dataSource: filtered,\r\n              selected: Object.values(filtered).map(n => n.id)\r\n            } \r\n          }\r\n        else{\r\n            return{\r\n              ...state,\r\n              valueSearch: action.payload,\r\n              dataSource: filtered\r\n            }\r\n        }\r\n      case ROW_CLICK:\r\n          const sIndex = state.selected.indexOf(action.payload);\r\n          let newSelected = [];\r\n          if (sIndex === -1) newSelected = newSelected.concat(state.selected, action.payload);\r\n          else if (sIndex === 0) newSelected = newSelected.concat(state.selected.slice(1));\r\n          else if (sIndex === state.selected.length - 1) newSelected = newSelected.concat(state.selected.slice(0, -1));\r\n          else if (sIndex > 0) {\r\n            newSelected = newSelected.concat( state.selected.slice(0, sIndex), state.selected.slice(sIndex + 1) );\r\n          }\r\n        return {\r\n            ...state,\r\n            selected: [...newSelected] \r\n        }\r\n      case RESELECT:\r\n        return {\r\n            ...state,\r\n            selected: [...action.checked] \r\n        }\r\n      case UPDATE_FORM:\r\n        if(action.payload){\r\n          let data = {[action.payload.pgInput] : {...action.payload}}\r\n          return{\r\n            ...state,\r\n            cDataStore: {...state.cDataStore, ...data}\r\n          }\r\n        }\r\n        else{\r\n          return {\r\n            ...state,\r\n            cDataStore: {}\r\n          }\r\n        }\r\n    \r\n      case TOOGLE_LOADING: \r\n        return{\r\n            ...state,\r\n            isLoading: action.payload\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\reducers\\salesReducer.js",["224"],"import { UPDATE_ITEMS } from '../types/salesType';\r\n\r\nconst initialState = {\r\n    dataItems: [\r\n        { number: 1, code:'LTCDO', name:'lutut', stock:5, qty:1, qtytype:'6029f897c92f86247017e7e2', price:1000, disc:100, subtotal:900 },\r\n        { number: 2, code:'lcdm', name:'mata kaki', stock:12, qty:1, qtytype:'6029f897c92f86247017e7e2', price:5000, disc:0, subtotal:5000 },\r\n    ],\r\n    dataInfo: [\r\n        {id: 1, title:'Sales Info', invno: 'inv02021', invdt:'02/02/2021', admin:'122334', customer:'6029f897c92f86247017e7e6'},\r\n        {id: 2, title:'Payment Info', subtotal:10000, disc:1000, addcharge:500, adddisc: 500, grandtotal:9000, cash:5000, changedue:4000, changeduetype:'due', transfer:4000}\r\n    ]\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case UPDATE_ITEMS:\r\n        return {\r\n            ...state,\r\n            dataItems: [...action.payload.dataItems ]\r\n          }\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\routes\\rpage.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\dataType.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\tableType.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\config.js",["225"],"\r\nconst isLocalhost = Boolean(\r\n     window.location.hostname === 'localhost' ||\r\n     window.location.hostname.includes('testapp') ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n);\r\n\r\nexport default {\r\n    defaultPath: '/dashboard',\r\n    basename: 'react/default', // only at build time to set, like \r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'default', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n    \r\n    \r\n    baseURL:  isLocalhost ? 'http://localhost:5000/' : 'ISAPI.dll/',\r\n    apiURL: isLocalhost ? 'http://localhost:5000/v1/': 'ISAPI.dll/api/',\r\n\r\n    month: [\r\n        { \"abbreviation\": \"Jan\", \"name\": \"January\", 'value': '0' },\r\n        { \"abbreviation\": \"Feb\", \"name\": \"February\", 'value': '1' },\r\n        { \"abbreviation\": \"Mar\", \"name\": \"March\", 'value': '2' },\r\n        { \"abbreviation\": \"Apr\", \"name\": \"April\", 'value': '3' },\r\n        { \"abbreviation\": \"May\", \"name\": \"May\", 'value': '4' },\r\n        { \"abbreviation\": \"Jun\", \"name\": \"June\", 'value': '5' },\r\n        { \"abbreviation\": \"Jul\", \"name\": \"July\", 'value': '6', },\r\n        { \"abbreviation\": \"Aug\", \"name\": \"August\", 'value': '7' },\r\n        { \"abbreviation\": \"Sep\", \"name\": \"September\", 'value': '8' },\r\n        { \"abbreviation\": \"Oct\", \"name\": \"October\", 'value': '9' },\r\n        { \"abbreviation\": \"Nov\", \"name\": \"November\", 'value': '10' },\r\n        { \"abbreviation\": \"Dec\", \"name\": \"December\", 'value': '11' }\r\n    ]\r\n\r\n};\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\authType.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\helper\\isEmpty.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\helper\\setAuthToken.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\auth\\Auth.js",["226"],"import React, {useEffect, useState} from \"react\";\r\nimport * as C from \"./StyledC\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TOOGLE_LOADING } from '../../services/types/authType';\r\nimport { login, register } from '../../services/actions/authAction';\r\nimport \"./styles.css\";\r\n\r\nfunction Auth() {\r\n  console.log('render auth')\r\n  const [signIn, toggle] = useState(true); \r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(s => s.auth.isAuthenticated);\r\n  const history = useHistory();\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('admin@admin.com');\r\n  const [password, setPassword] = useState('admin');\r\n  const [role] = useState('');\r\n  const [showPass, setshowPass] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(isAuthenticated){\r\n       history.push('/');\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  const handleOnSubmitLogin = (e) =>{\r\n    e.preventDefault();\r\n    dispatch({type: TOOGLE_LOADING, payload: true}); \r\n    dispatch(login({email, password, showPass}, history));  \r\n  }\r\n\r\n  const handleOnSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n    dispatch({type: TOOGLE_LOADING, payload: true}); \r\n    dispatch(register({name, email, password, role }, history));\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n      if (e.target.name === 'name') { setName(e.target.value) }\r\n      else if(e.target.name === 'email') { setEmail(e.target.value) }\r\n      else if(e.target.name === 'password') { setPassword(e.target.value) }\r\n    }\r\n\r\n  const handleClickShowPassword = () => { setshowPass(!showPass) } \r\n\r\n  return (\r\n    <C.Container>\r\n      <C.SignUpContainer signingIn={signIn}>\r\n        <C.Form onSubmit={ handleOnSubmitRegister }>\r\n          <C.Title>Create Account</C.Title>\r\n          <C.Input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={handleOnChange} value={name} />\r\n          <C.Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleOnChange} value={email} />\r\n          <C.Input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleOnChange} value={password}/>\r\n          <input type=\"hidden\" name=\"role_id\" id=\"role_id\" value=\"2\"/>\r\n          <C.Button>Sign Up</C.Button>\r\n        </C.Form>\r\n      </C.SignUpContainer>\r\n      <C.SignInContainer signingIn={signIn}>\r\n        <C.Form onSubmit={ handleOnSubmitLogin }> \r\n          <C.Title>Sign in</C.Title>\r\n          <C.Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleOnChange} value={email} />\r\n          <C.Input type=\"password\" placeholder=\"Password\"  name=\"password\" onChange={handleOnChange} value={password} />\r\n          <C.Anchor href=\"#\">Forgot your password?</C.Anchor>\r\n          <C.Button type=\"submit\">Sign In</C.Button>\r\n        </C.Form>\r\n      </C.SignInContainer>\r\n      <C.OverlayContainer signingIn={signIn}>\r\n        <C.Overlay signingIn={signIn}>\r\n          <C.LeftOverlayPanel signingIn={signIn}>\r\n            <C.Title>Welcome Back!</C.Title>\r\n            <C.Paragraph>\r\n              To keep connected with us please login with your personal info\r\n            </C.Paragraph>\r\n            <C.GhostButton onClick={() => toggle(true)}>\r\n              Sign In\r\n            </C.GhostButton>\r\n          </C.LeftOverlayPanel>\r\n          <C.RightOverlayPanel signingIn={signIn}>\r\n            <C.Title>Hello, Friend!</C.Title>\r\n            <C.Paragraph>\r\n              Enter your personal details and start journey with us\r\n            </C.Paragraph>\r\n            <C.GhostButton onClick={() => toggle(false)}>\r\n              Sign Up\r\n            </C.GhostButton>\r\n          </C.RightOverlayPanel>\r\n        </C.Overlay>\r\n      </C.OverlayContainer>\r\n    </C.Container>\r\n  );\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(Auth, areEqual);\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\types\\salesType.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\admin\\Nav.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\report\\Report.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\home\\Home.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\purchase\\Purchase.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\return\\Return.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\setting\\Setting.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\Data.js",["227","228","229","230"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport ToolsAction from './ToolsAction';\r\nimport Header from '../template/Header';\r\nimport TabPanel, {Item} from 'devextreme-react/tab-panel';\r\nimport GridProduct from './GridProduct';\r\nimport GridSupplier from './GridSupplier';\r\nimport GridCustomer from './GridCustomer';\r\nimport GridBrand from './GridBrand';\r\nimport GridCategory from './GridCategory';\r\nimport GridQty from './GridQty';\r\nimport { getData } from \"../../services/actions/dataAction\";\r\nimport '../../styles/sass/component/_data.scss'\r\n\r\nfunction Data() {\r\n    const refGridProduct = useRef(null);\r\n    const refGridCustomer = useRef(null)\r\n    const refGridBrand = useRef(null)\r\n    const refGridSupplier = useRef(null)\r\n    const refGridCategory = useRef(null)\r\n    const refGridQty = useRef(null)\r\n    const refPanel = useRef(null);\r\n    const [tabActive, setTabActive] = useState(0);\r\n    const dispatch = useDispatch();\r\n    // const productDS = useSelector(s => s.data.dataProduct);\r\n    \r\n    const onSelectionChanged = (args) => {\r\n        if(args.name === 'selectedIndex') {\r\n            setTabActive(args.value);\r\n          }\r\n    }\r\n\r\n    const onInitialized = (args) =>{ dispatch(getData(tabActive)); }\r\n\r\n    const onActionClick = (e) => {\r\n        if(e.itemIndex === 0){\r\n           refGridProduct.current.instance.addRow(); \r\n        }\r\n    }\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div className=\"content-container data\">\r\n        <Header />\r\n        <div className=\"content-data\">\r\n            {/* < ToolsAction onItemClick={onActionClick} /> */}\r\n            <TabPanel\r\n                ref ={refPanel}\r\n                height={\"100%\"}\r\n                selectedIndex={tabActive}\r\n                onOptionChanged={onSelectionChanged}\r\n                onSelectionChanged={ onInitialized }\r\n                onInitialized={ onInitialized }\r\n                loop={false}\r\n                animationEnabled={true}\r\n                swipeEnabled={true}\r\n            > \r\n                <Item title=\"Barang\" key={0} >\r\n                    <GridProduct tab={0} vref={refGridProduct} />\r\n                </Item>\r\n                <Item title=\"Supplier\" ke={1} >\r\n                    <GridSupplier tab={1} vref={refGridSupplier} />\r\n                </Item>\r\n                <Item title=\"Pelanggan\" ke={2} >\r\n                    <GridCustomer tab={2} vref={refGridCustomer}/>\r\n                </Item>\r\n                <Item title=\"Merk\" ke={3} >\r\n                    <GridBrand tab={3} vref={refGridBrand}/>\r\n                </Item>\r\n                <Item title=\"Kategori\" ke={4} >\r\n                    <GridCategory tab={4} vref={refGridCategory}/>\r\n                </Item>\r\n                <Item title=\"Satuan\" key={5} >\r\n                    <GridQty tab={5} vref={refGridQty}/>\r\n                </Item>\r\n            </TabPanel>\r\n        </div>\r\n \r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(Data, areEqual);\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\auth\\StyledC.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\Sales.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\ToolsAction.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\template\\Header.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridBrand.js",["231","232","233"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridBrand({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const brandDS = useSelector(s => s.data.dataBrand);\r\n    const isLoad = false;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewBrd'}\r\n                dataSource= { brandDS }\r\n                //onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.BRAND_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridBrand, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridQty.js",["234","235","236","237","238"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridQty({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const qtyDS = useSelector(s => s.data.dataQtytype);\r\n    const isLoad = false;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data'\r\n        )// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewQty'}\r\n                dataSource= { qtyDS }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.BRAND_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.BRAND_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={4} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"code\" />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"code\" caption=\"CODE\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridQty, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridCategory.js",["239","240","241","242"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\nfunction GridCategory({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const categoryDS = useSelector(s => s.data.dataCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    console.log(tab,'render grid Category');\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewCty'}\r\n                dataSource= { categoryDS }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => gConfig.onRowInserted(e, gConfig.CATEGORY_TAB_INDEX, null)(dispatch) }\r\n                onRowUpdated = { (e) => { gConfig.onRowUpdated(e, gConfig.CATEGORY_TAB_INDEX, null)(dispatch) } }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.CATEGORY_TAB_INDEX)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"code\" />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />  \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"code\" caption=\"CODE\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridCategory, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridCustomer.js",["243","244","245","246","247","248","249","250","251"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\n\r\nfunction GridCustomer({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const customerDS = useSelector(s => s.data.dataCustomer);\r\n    const isLoad = false;\r\n    const refImageUploader = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewCus'}\r\n               // key={'evdno'}\r\n                dataSource= { customerDS }\r\n                onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                //noDataText={isLoad ? '' : 'No Data !'}\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => {\r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                     gConfig.onRowInserted(e, gConfig.CUSTOMER_TAB_INDEX, uploadedImg)(dispatch) \r\n                    }\r\n                 }\r\n                onRowUpdated = { (e) => { \r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                    gConfig.onRowUpdated(e, gConfig.CUSTOMER_TAB_INDEX, uploadedImg)(dispatch) }\r\n                }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.CUSTOMER_TAB_INDEX, true)(dispatch) }}\r\n            > \r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"address\" />\r\n                        <Item dataField=\"city\" />\r\n                        <Item dataField=\"province\" />\r\n                        <Item dataField=\"phone\" />\r\n                        <Item dataField=\"phone2\" />\r\n                        <Item dataField=\"store\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />     \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"address\" caption=\"ALAMAT\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"city\" caption=\"KOTA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"province\" caption=\"PROVINSI\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone\" caption=\"TLP\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone2\" caption=\"TLP2\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"store\" caption=\"TOKO\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridCustomer, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridSupplier.js",["252","253","254","255","256","257","258"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\n\r\nfunction GridSupplier({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('multiple');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const supplierDS = useSelector(s => s.data.dataSupplier);\r\n    const isLoad = false;\r\n    const refImageUploader = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        console.log('render useeffect data')\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    console.log(tab,'render grid supplier');\r\n    return (\r\n        <DataGrid\r\n            ref={vref}\r\n            id={'gridViewSupp'}\r\n            dataSource= { supplierDS}\r\n            columnAutoWidth={true}\r\n            height= {\"100%\"}\r\n            width= {\"100%\"}\r\n            showBorders={false}\r\n            showColumnLines= {false}\r\n            showRowLines={true}\r\n            rowAlternationEnabled={true}\r\n            onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n            allowColumnResizing={true}\r\n            onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n            onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n            onRowInserted = { (e) => {\r\n                let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                 gConfig.onRowInserted(e, gConfig.SUPPLIER_TAB_INDEX, uploadedImg)(dispatch) \r\n                }\r\n             }\r\n            onRowUpdated = { (e) => { \r\n                let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                gConfig.onRowUpdated(e, gConfig.SUPPLIER_TAB_INDEX, uploadedImg)(dispatch) }\r\n            }\r\n            onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.SUPPLIER_TAB_INDEX, true)(dispatch) }}\r\n        > \r\n    <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\"  editorOptions={{ disabled: true  }} />\r\n                        <Item dataField=\"name\" />\r\n                        <Item dataField=\"address\" />\r\n                        <Item dataField=\"city\" />\r\n                        <Item dataField=\"province\" />\r\n                        <Item dataField=\"phone\" />\r\n                        <Item dataField=\"phone2\" />\r\n                        <Item dataField=\"store\" />\r\n                        <Item dataField=\"desc\" editorType=\"dxTextArea\" colSpan={2} editorOptions={{ height: 100 }} />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />     \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"address\" caption=\"ALAMAT\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"city\" caption=\"KOTA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"province\" caption=\"PROVINSI\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone\" caption=\"TLP\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"phone2\" caption=\"TLP2\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"store\" caption=\"TOKO\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"DESK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n           \r\n        </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridSupplier, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\RightSecSales.js",["259","260","261","262","263","264","265"],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftSecSales.js",["266","267","268"],"import React from 'react'\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport LeftScanSales from './LeftScanSales';\r\nimport LeftItemSales from './LeftItemSales';\r\nimport LeftNoteSales from './LeftNoteSales';\r\n\r\nfunction LeftSecSales() {\r\n    return (\r\n        <div className={'left-section-sales'}>\r\n            <LeftScanSales />\r\n            <LeftItemSales />\r\n            <LeftNoteSales />\r\n        </div>\r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftSecSales, areEqual)","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\services\\actions\\dataAction.js",[],"C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\GridProduct.js",["269","270","271","272","273"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport DataGrid, { Column, FormItem, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Popup, Position, Form, Lookup } from 'devextreme-react/data-grid';\r\nimport FileUploader from 'devextreme-react/file-uploader';\r\nimport { Item } from 'devextreme-react/form';\r\nimport * as gConfig from './ConfigGrids';\r\nimport { getProductSupport } from \"../../services/actions/dataAction\";\r\n\r\nfunction GridTable({tab, vref}) {\r\n    const [selectionMode, setSelectionMode] = useState('single');\r\n    const [expandMode, setExpandMode] = useState(true);\r\n    const productDS = useSelector(s => s.data.dataProduct);\r\n    const [brandDS, setBrandDS] = useState(null);\r\n    const [categoryDS, setCategoryDS] = useState(null);\r\n    const [qtyDS, setQtyDS]= useState(null);\r\n    const [supplierDS, setSupplierDS] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const refImageUploader = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getProductSupport().then((res) => {\r\n            if(res){\r\n                setBrandDS(res.brand.data);\r\n                setCategoryDS(res.category.data);\r\n                setQtyDS(res.qtytype.data);\r\n                setSupplierDS(res.supplier.data);\r\n            }\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n         <DataGrid\r\n                ref={vref}\r\n                id={'gridViewPd'}\r\n                dataSource= { productDS }\r\n                //onContentReady={ (e) => gConfig.onContentReady(e, isLoad) }\r\n                columnAutoWidth={true}\r\n                height= {\"100%\"}\r\n                width= {\"100%\"}\r\n                noDataText={'No Data !'}\r\n                onToolbarPreparing={ (e) => gConfig.onToolbarPreparing(e, selectionMode, setSelectionMode, expandMode, setExpandMode) }\r\n                showBorders={false}\r\n                showColumnLines= {false}\r\n                showRowLines={true}\r\n                rowAlternationEnabled={true}\r\n                allowColumnResizing={true}\r\n                onSelectionChanged= { (e) => gConfig.changeStateSelectionChange(e)  }  \r\n                onInitNewRow={ (e) => { gConfig.onInitNewRow(e); }}\r\n                onRowInserted = { (e) => {\r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                     gConfig.onRowInserted(e, gConfig.PRODUCT_TAB_INDEX, uploadedImg)(dispatch) \r\n                    }\r\n                 }\r\n                onRowUpdated = { (e) => { \r\n                    let uploadedImg = refImageUploader.current.instance.option('value')[0];\r\n                    gConfig.onRowUpdated(e, gConfig.PRODUCT_TAB_INDEX, uploadedImg)(dispatch) }\r\n                }\r\n                onRowRemoving = { (e) => { gConfig.onRowRemoved(e, gConfig.PRODUCT_TAB_INDEX, true)(dispatch) }}\r\n            > \r\n\r\n            {/* <Scrolling mode={\"virtual\"} /> */}\r\n            {/* <LoadPanel enabled={false}  showPane={false} /> */}\r\n            <Editing mode=\"form\" allowUpdating={true} allowAdding={true} allowDeleting={true} texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }} >\r\n                <Form>\r\n                    <Item itemType=\"group\" colCount={5} colSpan={2}>\r\n                        <Item dataField=\"number\" editorOptions={{ disabled: true }} />\r\n                        <Item dataField=\"name\" />   \r\n                        <Item dataField=\"brand\"  editorType=\"dxLookup\" editorOptions={{  dataSource: brandDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"category\"  editorType=\"dxLookup\" editorOptions={{ dataSource: categoryDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"bprice\" editorType=\"dxNumberBox\" editorOptions={{ format: \"Rp #,##0.##\" }} />\r\n                        <Item dataField=\"sprice\" editorType=\"dxNumberBox\" editorOptions={{ format: \"Rp #,##0.##\" }}/>\r\n                        <Item dataField=\"stock\"  editorType=\"dxNumberBox\"/>\r\n                        <Item dataField=\"qtytype\"  editorType=\"dxLookup\" editorOptions={{  dataSource: qtyDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"color\" />\r\n                        <Item dataField=\"supplier\"  editorType=\"dxLookup\" editorOptions={{  dataSource: supplierDS,  valueExpr:'_id', displayExpr:'name', searchEnabled: true,  }} />\r\n                        <Item dataField=\"desc\" />\r\n                        <Item itemType=\"group\" caption=\"Gambar\" colCount={1}> \r\n                            <FileUploader ref={refImageUploader} \r\n                                selectButtonText=\"Pilih Gambar\" \r\n                                labelText=\"\" accept=\"image/*\" \r\n                                uploadMode=\"useButtons\" \r\n                                maxFileSize={600000} \r\n                                allowedFileExtensions={['.jpg', '.jpeg', '.gif', '.png']} \r\n                            />\r\n                        </Item>\r\n                    </Item>  \r\n                </Form>\r\n            </Editing>\r\n            <GroupPanel visible={true} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n            <Grouping autoExpandAll={expandMode} />\r\n            <SearchPanel visible={true} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n            <Selection mode={selectionMode} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n            <ColumnFixing enabled={true} />          \r\n            <Column dataField=\"number\" caption=\"NO.\" visible={true} allowEditing={false}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"name\" caption=\"NAMA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"brand\" caption=\"MERK\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                <Lookup dataSource={brandDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"sprice\" caption=\"JUAL\" dataType=\"number\" format={{type:\"fixedPoint\", precision:2}} cssClass=\"row-vertical-align\" /> \r\n            <Column dataField=\"bprice\" caption=\"BELI\" dataType=\"number\" format={{type:\"fixedPoint\", precision:2}}  cssClass=\"row-vertical-align\" />    \r\n            <Column dataField=\"stock\" caption=\"STOCK\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"qtytype\" caption=\"SATUAN\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={qtyDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"category\" caption=\"KATEGORI\" visible={true}  cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={categoryDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            <Column dataField=\"color\" caption=\"WARNA\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"supplier\" caption=\"PENYEDIA\" visible={true} cssClass=\"row-vertical-align\" >\r\n                 <Lookup dataSource={supplierDS} valueExpr=\"_id\" displayExpr=\"name\" />\r\n            </Column>\r\n            {/* <Column dataField=\"duedate\" caption=\"DUE DATE\" visible={true} dataType=\"date\" format=\"dd/MM/yyyy\" width={120} cssClass=\"row-vertical-align\" /> */}\r\n            <Column dataField=\"image\" caption=\"GAMBAR\" visible={true}  cssClass=\"row-vertical-align\" />\r\n            <Column dataField=\"desc\" caption=\"KET. \" visible={true}  cssClass=\"row-vertical-align\" />\r\n            \r\n    </DataGrid>  \r\n    )\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(GridTable, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\data\\ConfigGrids.js",["274","275","276","277"],"import React from 'react';\r\nimport { Column, Lookup } from 'devextreme-react/data-grid';\r\nimport isEmpty from '../../services/helper/isEmpty';\r\nimport { storeData, updateData, deleteData } from \"../../services/actions/dataAction\";\r\n\r\n\r\nexport const PRODUCT_TAB_INDEX = 0\r\nexport const SUPPLIER_TAB_INDEX = 1\r\nexport const CUSTOMER_TAB_INDEX = 2\r\nexport const BRAND_TAB_INDEX = 3\r\nexport const CATEGORY_TAB_INDEX = 4\r\nexport const QTYTYPE_TAB_INDEX = 5\r\nexport const COLOR_TAB_INDEX = 6\r\n\r\nexport const onToolbarPreparing = (e, selectionMode, setSelectionMode, expandMode, setExpandMode ) => {\r\n    var dataGrid = e.component;\r\n    var toolbarItems = e.toolbarOptions.items;\r\n //   toolbarItems[0].visible = false;\r\n    toolbarItems.unshift(\r\n    {\r\n        widget: \"dxButton\",\r\n        name: \"btnMulti\",\r\n        locateInMenu: \"auto\",\r\n        location: \"after\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: selectionMode === 'multiple' ? \"Pilih Satu Baris\" : \"Pilih Sekaligus\" ,\r\n            elementAttr: { \"id\": \"btnMulti\" },\r\n            icon: \"check\", //\"fa fa-check\",\r\n            text: \"Pilih Sekaligus\",\r\n            onClick: (e) => { setSelectionMode(selectionMode === 'multiple' ? \"single\" : \"multiple\" ); } // this.selectionModeChanged.bind(this)\r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        name: \"btnFilter\",\r\n        locateInMenu: \"auto\",\r\n        location: \"after\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: \"Saring Baris\",\r\n            elementAttr: { \"id\": \"btnFilter\" },\r\n            icon: \"filter\", //\"fa fa-filter\",\r\n            text: \"Saring Baris\",\r\n            onClick: function (e) {\r\n                var filter = dataGrid.option(\"filterRow.visible\") === false;\r\n                dataGrid.option(\"filterRow.visible\", filter);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        location: \"after\",\r\n        name: \"btnExpand\",\r\n        locateInMenu: \"auto\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        options: {\r\n            hint: expandMode ? \"Persempit Baris\" : \"Perluas Baris\", \r\n            elementAttr: { \"id\": \"btnExpand\" },\r\n            icon: expandMode ? \"collapse\" : \"expand\",\r\n            text: expandMode ? \"Persempit Baris\" : \"Perluas Baris\",\r\n            onClick: (e) => {\r\n                setExpandMode(!expandMode);\r\n            } \r\n        }\r\n    },\r\n    {\r\n        widget: \"dxButton\",\r\n        location: \"after\",\r\n        name: \"btnMultiDelete\",\r\n        locateInMenu: \"auto\",\r\n        sortIndex: 40,\r\n        showText: \"inMenu\",\r\n        visible: true,\r\n        options: {\r\n            hint: \"Hapus Sekaligus\", \r\n            elementAttr: { \"id\": \"btnMultiDel\" },\r\n            icon: \"trash\",\r\n            text: \"Hapus Sekaligus\",\r\n            onClick: (e) => {\r\n              //  setExpandMode(!expandMode);\r\n            } \r\n        }\r\n    }\r\n    );\r\n};\r\n\r\nexport const changeStateSelectionChange =  (e) => {\r\n    console.log(e);\r\n}\r\n\r\nexport const onContentReady = (e, isLoad) => {\r\n    if (isLoad) { e.component.beginCustomLoading(); } \r\n    else{ e.component.endCustomLoading(); }\r\n    var scrollable = e.component.getScrollable();  \r\n    scrollable.scrollTo(scrollable.scrollHeight()); \r\n}\r\n\r\nexport const onInitNewRow = (e) => {\r\n    e.data.number = e.component.option('dataSource').length + 1;\r\n}  \r\n\r\nexport const onRowInserted = (e, tab, image) => dispatch => {\r\n    if(image){ e.data.image = image; }\r\n    e.data.code = e.data.number;\r\n    dispatch(storeData(tab, e.data));\r\n}\r\n\r\nexport const onRowUpdated = (e, tab, image) => dispatch => {\r\n    dispatch(updateData(tab, e.data, image));\r\n}\r\n\r\nexport const onRowRemoved = (e, tab, hasImage) => dispatch => {\r\n    let data = {};\r\n    const selectedRow = e.component.getSelectedRowsData();\r\n    if(selectedRow.length > 0) { \r\n        data.ids = selectedRow.map(el => el._id)\r\n       if (hasImage) data.imgs = selectedRow.map(el => el.image);\r\n    }\r\n     else if(e.data) {\r\n         data.ids = []; data.imgs = [];\r\n         data.ids.push(e.data._id)\r\n       if(hasImage) data.imgs.push(e.data.image);\r\n    }\r\n    dispatch(deleteData(data, tab));\r\n}","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\RightAccSaleInfo.js",["278","279","280"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DateBox, SelectBox } from 'devextreme-react';\r\nimport { getData } from '../../services/actions/dataAction';\r\nimport { CUSTOMER_TAB_INDEX, tab } from '../data/ConfigGrids';\r\n\r\nfunction RightAccSaleInfo({data}) {\r\n\r\n    const [invDate, setInvDate] = useState(new Date());\r\n    const customerDS = useSelector(s => s.data.dataCustomer); \r\n    const user = useSelector(s => s.auth.user);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {   \r\n        dispatch(getData(CUSTOMER_TAB_INDEX));\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row className={'mb-2'}>\r\n                <Col>Invoice</Col>\r\n                <Col>{data.invno}</Col>\r\n            </Row>\r\n            <Row className={'mb-2'}>\r\n                <Col>Date</Col>\r\n                <Col>\r\n                    <DateBox defaultValue={invDate} disabled={true} type=\"date\" />\r\n                </Col>\r\n            </Row>\r\n            <Row className={'mb-2'}>\r\n                <Col>Cashier</Col>\r\n                <Col>{user.name}</Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>Customer</Col>\r\n                <Col>\r\n                <SelectBox \r\n                    dataSource={customerDS}\r\n                    displayExpr={'name'}\r\n                    valueExpr={'_id'}\r\n                    searchEnabled={true}\r\n                    searchMode={'contains'}\r\n                    searchExpr={'name'}\r\n                    searchTimeout={200}\r\n                    minSearchLength={0}\r\n                    showDataBeforeSearch={true} \r\n                    defaultValue={data.customer}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(RightAccSaleInfo, areEqual)\r\n\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftScanSales.js",["281","282","283","284","285","286"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport { TextBox, Button as TextBoxButton } from 'devextreme-react/text-box';\r\n\r\nfunction LeftScanSales() {\r\n\r\n    return (\r\n        <>\r\n            <Card className={'mt-2 p-4 scan-sales-card'}>\r\n                <TextBox\r\n                    placeholder=\"scan or search here..\"\r\n                    stylingMode=\"outlined\"\r\n                    defaultValue=\"\"\r\n                >\r\n                    <TextBoxButton\r\n                    name=\"search\"\r\n                    location=\"after\"\r\n                    options={\r\n                        {\r\n                            elementAttr:{'id':'text-button-search'},\r\n                            icon: 'search',\r\n                            type: 'default',\r\n                            onClick: () => {\r\n                                alert('nyoh')\r\n                            }\r\n                        }\r\n                    }\r\n                    />\r\n                </TextBox>\r\n            </Card> \r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftScanSales, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftItemSales.js",["287","288","289","290","291","292","293","294"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';   \r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport DataGrid, {Column, Selection, Grouping, GroupPanel, ColumnFixing, SearchPanel, Scrolling, LoadPanel, Editing, Form } from 'devextreme-react/data-grid';\r\nimport LeftItemCellCustom from './LeftItemCellCustom';\r\nimport {getData} from '../../services/actions/dataAction';\r\nimport {QTYTYPE_TAB_INDEX}  from '../data/ConfigGrids';\r\n\r\nfunction LeftItemSales() {\r\n\r\n    const itemSource = useSelector(s => s.sales.dataItems);\r\n    const qtyDS = useSelector(s => s.data.dataQtytype);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getData(QTYTYPE_TAB_INDEX))    \r\n    \r\n    }, [])\r\n\r\n    const customCellQty = (e) => {\r\n        if(qtyDS){\r\n            let filtered = qtyDS.filter(v => v._id === e.data.qtytype );\r\n            if(filtered.length === 0) {return e.data.qty}\r\n            return(\r\n                <div>\r\n                    <div> {e.data.qty} </div>\r\n                   <div> {filtered[0].name} </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return e.data.qty\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Card className={'mt-2 p-4 item-sales-card'}>\r\n            <DataGrid\r\n                 //   ref={vref}\r\n                    id={'gridItemSales'}\r\n                    dataSource= { itemSource }\r\n                    columnAutoWidth={true}\r\n                    height= {\"100%\"}\r\n                    width= {\"100%\"}\r\n                    noDataText={'No Data !'}\r\n                    showBorders={false}\r\n                    showColumnLines= {false}\r\n                    showRowLines={true}\r\n                    rowAlternationEnabled={false}\r\n                    allowColumnResizing={true}\r\n                    onCellPrepared = { (e) => {  if(e.rowType === 'header' || e.rowType === 'data'){ e.cellElement.style.textAlign = 'center' } } }\r\n                    // onSelectionChanged= { (e) =>{} }  \r\n                    // onInitNewRow={ (e) => {  }}\r\n                    // onRowInserted = { (e) =>{}}\r\n                    // onRowUpdated = { (e) => { } }\r\n                    // onRowRemoving = { (e) => {  }}\r\n                > \r\n                <Editing mode=\"cell\" \r\n                    allowUpdating={true} \r\n                    allowAdding={false} \r\n                    allowDeleting={true} \r\n                    texts={{saveRowChanges:'Simpan', cancelRowChanges:'Batal' }}\r\n                />\r\n\r\n                <GroupPanel visible={false} emptyPanelText={'Tarik kolom disini untuk menggabungkan Baris '} em />\r\n                {/* <Grouping autoExpandAll={expandMode} /> */}\r\n                <SearchPanel visible={false} highlightCaseSensitive={true} placeholder='  Cari disini..  '/>\r\n                <Selection mode={'single'} selectAllMode={'allPages'} showCheckBoxesMode={'always'} allowSelectAll={true} />\r\n                <ColumnFixing enabled={true} />  \r\n                <Column dataField=\"number\" caption=\"No.\" width={50} visible={true}  cssClass=\"row-vertical-align\" allowEditing={false}/>\r\n                <Column dataField=\"name\" caption=\"Items\" visible={true}  cssClass=\"row-vertical-align\" allowEditing={false} cellRender={LeftItemCellCustom}/>\r\n                <Column dataField=\"price\" caption=\"Price\" visible={true}  cssClass=\"row-vertical-align\" allowEditing={false} />\r\n                <Column dataField=\"qty\"\r\n                    caption=\"Qty\" \r\n                    dataType='number' \r\n                    visible={true} \r\n                    cssClass=\"row-vertical-align\" \r\n                    allowEditing={true} \r\n                    editorOptions={{'showSpinButtons':true}} \r\n                    cellRender={customCellQty}/>\r\n                <Column dataField=\"disc\" caption=\"Discount\" visible={true}  cssClass=\"row-vertical-align\" allowEditing={true} calculateDisplayValue={(e)=>{ return e.disc === 0 ? '' : e.disc  }  } />\r\n                <Column dataField=\"subtotal\" caption=\"Sub Total\" dataType='number'  visible={true}  cssClass=\"row-vertical-align\" allowEditing={false}/>\r\n\r\n            </DataGrid>  \r\n\r\n          </Card>  \r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftItemSales, areEqual)\r\n\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\RightAccPaymentInfo.js",["295","296","297","298"],"import React, {useState} from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport {Button, NumberBox} from 'devextreme-react';\r\n\r\nfunction RightAccPaymentInfo({data}) {\r\n    const [addcharge, setAddCharge] = useState(0); \r\n    const [addDisc, setAddDisc] = useState(0); \r\n    \r\n    const calculateTotal = () => {\r\n        return(\r\n            <div>{Number(data.subtotal - data.disc + addcharge - addDisc) }</div>\r\n        )\r\n    }\r\n\r\n    const CalculateDueChange = () => {\r\n        return(\r\n            <div>{Number(data.grantotal - data.cash + addcharge - addDisc) }</div>\r\n        )\r\n    }\r\n\r\n    const onAddPayment = () =>{\r\n\r\n    }\r\n\r\n    const onCancelPayment = () => {\r\n\r\n    }\r\n\r\n    const onProcessPayment = () => {\r\n    }\r\n    return (\r\n        <>\r\n            <Row> <Col>SubTotal</Col> <Col>{data.subtotal}</Col> </Row>  \r\n            <div className={'line-h-paymeny-info'}></div>\r\n           <Row> <Col>Discount</Col> <Col>{data.disc}</Col> </Row> \r\n            <div className={'line-h-paymeny-info'}></div> \r\n             <Row> <Col>Additional Charge</Col> <Col>{data.addcharge}</Col> </Row>  \r\n            <div className={'line-h-paymeny-info'}></div>\r\n            <Row> <Col>Additional Discount</Col> <Col>{data.adddisc}</Col> </Row>  \r\n            <div className={'line-h-paymeny-info'}></div>\r\n            <Row> <Col>Total</Col> <Col>{data.grandtotal}</Col></Row> \r\n            <Row>\r\n                <div className={'cash-due-box'}>\r\n                    <div className={'cash-box'}>\r\n                        <div className={'cash-label'}>Cash</div>\r\n                        <div className={'cash-value'}>    \r\n                            <NumberBox\r\n                                id={'eCashValue'}\r\n                                defaultValue={data.cash}\r\n                                min={0}\r\n                                height={'100px'}\r\n                                style={{'font-size':'5rem'}}\r\n                                showSpinButtons={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'due-box'}>\r\n                        <div className={'due-label'}>Due</div>\r\n                        <div className={'due-value'}>{ data.changedue }</div>\r\n                    </div>   \r\n                    <div className={'middle-line'}></div>   \r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className={'add-payment-label'}>Transfer</div>\r\n                <div className={'add-payment-value'}>\r\n                    <NumberBox\r\n                        id={'eAddPayment'}\r\n                        defaultValue={data.transfer}\r\n                        min={10}\r\n                        max={20}\r\n                        showSpinButtons={true}\r\n                    />\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n            <div className={'btn-add-payment'}> \r\n                <Button\r\n                    id={'btnAddPayment'}\r\n                    icon={'plus'}\r\n                    type={'default'}\r\n                    hint={'Add Payment method'}\r\n                    onClick={() => {onAddPayment()}}\r\n                />\r\n            </div>\r\n            </Row>\r\n            <Row>\r\n            <div className='container-btn-cancel-payment'>\r\n                <Button\r\n                 id={'btnCancelPayment'}\r\n                 icon={'close'}\r\n                 type={'danger'}\r\n                 onClick={() => { onCancelPayment() } }\r\n                />\r\n            </div>\r\n            <div className='container-btn-process-payment'>\r\n                <Button\r\n                 id={'btnProcessPayment'}\r\n                 icon={'chevrondoubleright'}\r\n                 type={'success'}\r\n                 onClick={() => {onProcessPayment()}}\r\n                 \r\n                />\r\n            </div> \r\n            </Row>\r\n   \r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(RightAccPaymentInfo, areEqual)","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftNoteSales.js",["299","300","301","302","303","304"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\nimport TextBox from 'devextreme-react/text-box';\r\n\r\n\r\nfunction LeftNoteSales() {\r\n    return (\r\n        <>\r\n            <Card className={'mt-2 p-4 note-sales-card'}>\r\n                <TextBox stylingMode={'outlined'} placeholder=\"Note.\"/>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => true;\r\nexport default React.memo(LeftNoteSales, areEqual)\r\n","C:\\Users\\programmer3\\Documents\\Vicky\\re\\latihan\\_github\\kelokamern\\frontend\\src\\component\\sales\\LeftItemCellCustom.js",[],{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":12,"column":1,"nodeType":"311","endLine":46,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":22,"column":3,"nodeType":"311","endLine":67,"endColumn":4},{"ruleId":"309","severity":1,"message":"310","line":24,"column":1,"nodeType":"311","endLine":149,"endColumn":4},{"ruleId":"309","severity":1,"message":"310","line":14,"column":1,"nodeType":"311","endLine":24,"endColumn":4},{"ruleId":"309","severity":1,"message":"312","line":13,"column":1,"nodeType":"311","endLine":57,"endColumn":3},{"ruleId":"313","severity":1,"message":"314","line":46,"column":9,"nodeType":"315","messageId":"316","endLine":46,"endColumn":32},{"ruleId":"313","severity":1,"message":"317","line":1,"column":34,"nodeType":"315","messageId":"316","endLine":1,"endColumn":43},{"ruleId":"313","severity":1,"message":"318","line":2,"column":9,"nodeType":"315","messageId":"316","endLine":2,"endColumn":20},{"ruleId":"313","severity":1,"message":"319","line":3,"column":8,"nodeType":"315","messageId":"316","endLine":3,"endColumn":19},{"ruleId":"313","severity":1,"message":"320","line":35,"column":11,"nodeType":"315","messageId":"316","endLine":35,"endColumn":24},{"ruleId":"313","severity":1,"message":"321","line":3,"column":87,"nodeType":"315","messageId":"316","endLine":3,"endColumn":96},{"ruleId":"313","severity":1,"message":"322","line":3,"column":98,"nodeType":"315","messageId":"316","endLine":3,"endColumn":107},{"ruleId":"313","severity":1,"message":"323","line":12,"column":11,"nodeType":"315","messageId":"316","endLine":12,"endColumn":17},{"ruleId":"313","severity":1,"message":"321","line":3,"column":87,"nodeType":"315","messageId":"316","endLine":3,"endColumn":96},{"ruleId":"313","severity":1,"message":"322","line":3,"column":98,"nodeType":"315","messageId":"316","endLine":3,"endColumn":107},{"ruleId":"313","severity":1,"message":"324","line":3,"column":118,"nodeType":"315","messageId":"316","endLine":3,"endColumn":123},{"ruleId":"313","severity":1,"message":"325","line":3,"column":125,"nodeType":"315","messageId":"316","endLine":3,"endColumn":133},{"ruleId":"313","severity":1,"message":"323","line":12,"column":11,"nodeType":"315","messageId":"316","endLine":12,"endColumn":17},{"ruleId":"313","severity":1,"message":"321","line":3,"column":87,"nodeType":"315","messageId":"316","endLine":3,"endColumn":96},{"ruleId":"313","severity":1,"message":"322","line":3,"column":98,"nodeType":"315","messageId":"316","endLine":3,"endColumn":107},{"ruleId":"313","severity":1,"message":"326","line":8,"column":27,"nodeType":"315","messageId":"316","endLine":8,"endColumn":43},{"ruleId":"313","severity":1,"message":"327","line":9,"column":24,"nodeType":"315","messageId":"316","endLine":9,"endColumn":37},{"ruleId":"313","severity":1,"message":"328","line":3,"column":28,"nodeType":"315","messageId":"316","endLine":3,"endColumn":36},{"ruleId":"313","severity":1,"message":"321","line":3,"column":98,"nodeType":"315","messageId":"316","endLine":3,"endColumn":107},{"ruleId":"313","severity":1,"message":"322","line":3,"column":109,"nodeType":"315","messageId":"316","endLine":3,"endColumn":118},{"ruleId":"313","severity":1,"message":"324","line":3,"column":129,"nodeType":"315","messageId":"316","endLine":3,"endColumn":134},{"ruleId":"313","severity":1,"message":"325","line":3,"column":136,"nodeType":"315","messageId":"316","endLine":3,"endColumn":144},{"ruleId":"313","severity":1,"message":"329","line":3,"column":152,"nodeType":"315","messageId":"316","endLine":3,"endColumn":158},{"ruleId":"330","severity":1,"message":"331","line":32,"column":17,"nodeType":"332","endLine":32,"endColumn":39},{"ruleId":"330","severity":1,"message":"331","line":33,"column":17,"nodeType":"332","endLine":33,"endColumn":33},{"ruleId":"330","severity":1,"message":"331","line":34,"column":17,"nodeType":"332","endLine":34,"endColumn":32},{"ruleId":"313","severity":1,"message":"328","line":3,"column":28,"nodeType":"315","messageId":"316","endLine":3,"endColumn":36},{"ruleId":"313","severity":1,"message":"321","line":3,"column":98,"nodeType":"315","messageId":"316","endLine":3,"endColumn":107},{"ruleId":"313","severity":1,"message":"322","line":3,"column":109,"nodeType":"315","messageId":"316","endLine":3,"endColumn":118},{"ruleId":"313","severity":1,"message":"324","line":3,"column":129,"nodeType":"315","messageId":"316","endLine":3,"endColumn":134},{"ruleId":"313","severity":1,"message":"325","line":3,"column":136,"nodeType":"315","messageId":"316","endLine":3,"endColumn":144},{"ruleId":"313","severity":1,"message":"329","line":3,"column":152,"nodeType":"315","messageId":"316","endLine":3,"endColumn":158},{"ruleId":"313","severity":1,"message":"323","line":12,"column":11,"nodeType":"315","messageId":"316","endLine":12,"endColumn":17},{"ruleId":"313","severity":1,"message":"317","line":1,"column":26,"nodeType":"315","messageId":"316","endLine":1,"endColumn":35},{"ruleId":"313","severity":1,"message":"333","line":2,"column":22,"nodeType":"315","messageId":"316","endLine":2,"endColumn":33},{"ruleId":"313","severity":1,"message":"334","line":3,"column":9,"nodeType":"315","messageId":"316","endLine":3,"endColumn":12},{"ruleId":"313","severity":1,"message":"335","line":3,"column":14,"nodeType":"315","messageId":"316","endLine":3,"endColumn":17},{"ruleId":"313","severity":1,"message":"336","line":11,"column":12,"nodeType":"315","messageId":"316","endLine":11,"endColumn":20},{"ruleId":"313","severity":1,"message":"337","line":11,"column":22,"nodeType":"315","messageId":"316","endLine":11,"endColumn":33},{"ruleId":"313","severity":1,"message":"338","line":23,"column":11,"nodeType":"315","messageId":"316","endLine":23,"endColumn":27},{"ruleId":"313","severity":1,"message":"334","line":2,"column":9,"nodeType":"315","messageId":"316","endLine":2,"endColumn":12},{"ruleId":"313","severity":1,"message":"335","line":2,"column":14,"nodeType":"315","messageId":"316","endLine":2,"endColumn":17},{"ruleId":"313","severity":1,"message":"339","line":2,"column":19,"nodeType":"315","messageId":"316","endLine":2,"endColumn":23},{"ruleId":"313","severity":1,"message":"328","line":3,"column":28,"nodeType":"315","messageId":"316","endLine":3,"endColumn":36},{"ruleId":"313","severity":1,"message":"321","line":3,"column":98,"nodeType":"315","messageId":"316","endLine":3,"endColumn":107},{"ruleId":"313","severity":1,"message":"322","line":3,"column":109,"nodeType":"315","messageId":"316","endLine":3,"endColumn":118},{"ruleId":"313","severity":1,"message":"324","line":3,"column":129,"nodeType":"315","messageId":"316","endLine":3,"endColumn":134},{"ruleId":"313","severity":1,"message":"325","line":3,"column":136,"nodeType":"315","messageId":"316","endLine":3,"endColumn":144},{"ruleId":"313","severity":1,"message":"340","line":1,"column":8,"nodeType":"315","messageId":"316","endLine":1,"endColumn":13},{"ruleId":"313","severity":1,"message":"341","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":16},{"ruleId":"313","severity":1,"message":"329","line":2,"column":18,"nodeType":"315","messageId":"316","endLine":2,"endColumn":24},{"ruleId":"313","severity":1,"message":"342","line":3,"column":8,"nodeType":"315","messageId":"316","endLine":3,"endColumn":15},{"ruleId":"313","severity":1,"message":"343","line":6,"column":30,"nodeType":"315","messageId":"316","endLine":6,"endColumn":33},{"ruleId":"313","severity":1,"message":"344","line":10,"column":21,"nodeType":"315","messageId":"316","endLine":10,"endColumn":31},{"ruleId":"345","severity":1,"message":"346","line":16,"column":8,"nodeType":"347","endLine":16,"endColumn":10,"suggestions":"348"},{"ruleId":"313","severity":1,"message":"349","line":1,"column":16,"nodeType":"315","messageId":"316","endLine":1,"endColumn":24},{"ruleId":"313","severity":1,"message":"317","line":1,"column":26,"nodeType":"315","messageId":"316","endLine":1,"endColumn":35},{"ruleId":"313","severity":1,"message":"318","line":2,"column":9,"nodeType":"315","messageId":"316","endLine":2,"endColumn":20},{"ruleId":"313","severity":1,"message":"333","line":2,"column":22,"nodeType":"315","messageId":"316","endLine":2,"endColumn":33},{"ruleId":"313","severity":1,"message":"334","line":3,"column":9,"nodeType":"315","messageId":"316","endLine":3,"endColumn":12},{"ruleId":"313","severity":1,"message":"335","line":3,"column":14,"nodeType":"315","messageId":"316","endLine":3,"endColumn":17},{"ruleId":"313","severity":1,"message":"349","line":1,"column":16,"nodeType":"315","messageId":"316","endLine":1,"endColumn":24},{"ruleId":"313","severity":1,"message":"334","line":3,"column":9,"nodeType":"315","messageId":"316","endLine":3,"endColumn":12},{"ruleId":"313","severity":1,"message":"335","line":3,"column":14,"nodeType":"315","messageId":"316","endLine":3,"endColumn":17},{"ruleId":"313","severity":1,"message":"350","line":4,"column":38,"nodeType":"315","messageId":"316","endLine":4,"endColumn":46},{"ruleId":"313","severity":1,"message":"321","line":4,"column":87,"nodeType":"315","messageId":"316","endLine":4,"endColumn":96},{"ruleId":"313","severity":1,"message":"322","line":4,"column":98,"nodeType":"315","messageId":"316","endLine":4,"endColumn":107},{"ruleId":"313","severity":1,"message":"351","line":4,"column":118,"nodeType":"315","messageId":"316","endLine":4,"endColumn":122},{"ruleId":"345","severity":1,"message":"346","line":17,"column":8,"nodeType":"347","endLine":17,"endColumn":10,"suggestions":"352"},{"ruleId":"313","severity":1,"message":"353","line":6,"column":23,"nodeType":"315","messageId":"316","endLine":6,"endColumn":35},{"ruleId":"313","severity":1,"message":"354","line":7,"column":21,"nodeType":"315","messageId":"316","endLine":7,"endColumn":31},{"ruleId":"313","severity":1,"message":"355","line":9,"column":11,"nodeType":"315","messageId":"316","endLine":9,"endColumn":25},{"ruleId":"313","severity":1,"message":"356","line":15,"column":11,"nodeType":"315","messageId":"316","endLine":15,"endColumn":29},{"ruleId":"313","severity":1,"message":"349","line":1,"column":16,"nodeType":"315","messageId":"316","endLine":1,"endColumn":24},{"ruleId":"313","severity":1,"message":"317","line":1,"column":26,"nodeType":"315","messageId":"316","endLine":1,"endColumn":35},{"ruleId":"313","severity":1,"message":"318","line":2,"column":9,"nodeType":"315","messageId":"316","endLine":2,"endColumn":20},{"ruleId":"313","severity":1,"message":"333","line":2,"column":22,"nodeType":"315","messageId":"316","endLine":2,"endColumn":33},{"ruleId":"313","severity":1,"message":"334","line":3,"column":9,"nodeType":"315","messageId":"316","endLine":3,"endColumn":12},{"ruleId":"313","severity":1,"message":"335","line":3,"column":14,"nodeType":"315","messageId":"316","endLine":3,"endColumn":17},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'handleClickShowPassword' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'ToolsAction' is defined but never used.","'onActionClick' is assigned a value but never used.","'Scrolling' is defined but never used.","'LoadPanel' is defined but never used.","'isLoad' is assigned a value but never used.","'Popup' is defined but never used.","'Position' is defined but never used.","'setSelectionMode' is assigned a value but never used.","'setExpandMode' is assigned a value but never used.","'FormItem' is defined but never used.","'Lookup' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useDispatch' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'selectionChanged' is assigned a value but never used.","'Card' is defined but never used.","'React' is defined but never used.","'Column' is defined but never used.","'isEmpty' is defined but never used.","'tab' is defined but never used.","'setInvDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["359"],"'useState' is defined but never used.","'Grouping' is defined but never used.","'Form' is defined but never used.",["360"],"'setAddCharge' is assigned a value but never used.","'setAddDisc' is assigned a value but never used.","'calculateTotal' is assigned a value but never used.","'CalculateDueChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"361","fix":"363"},"Update the dependencies array to be: [dispatch]",{"range":"364","text":"365"},{"range":"366","text":"365"},[665,667],"[dispatch]",[764,766]]